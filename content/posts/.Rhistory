ggplot() +
geom_linerange(aes(ymin = 0, ymax = 1, x = 1:nrow(gq1), colour = factor(gq1[, 2]))) +
scale_color_manual(values = col) +
geom_line(aes(y = gq1[, 1], x = 1:nrow(gq1)), lwd = 0.8)
ggplot() +
geom_linerange(aes(ymin = 0, ymax = 1, x = 1:nrow(gq2), colour = factor(gq2[, 2]))) +
scale_color_manual(values = col) +
geom_line(aes(y = gq2[, 1], x = 1:nrow(gq2)), lwd = 0.8)
ggplot() +
geom_linerange(aes(ymin = 0, ymax = 1, x = 1:nrow(gq1), colour = factor(gq1[, 2]))) +
scale_color_manual(values = col) +
geom_line(aes(y = gq1[, 1], x = 1:nrow(gq1)), lwd = 0.8)
prob1 <- 1 / (1 + exp(-(m$zeta[1] - coef(m) * wines$price)))
prob1 <- 1 / (1 + exp(-(m$zeta[1] - coef(m) * dat$price)))
prob2 <- 1 / (1 + exp(-(m$zeta[2] - coef(m) * dat$price)))
prob3 <- 1 / (1 + exp(-(m$zeta[3] - coef(m) * dat$price)))
coef(m)
prob1 <- 1 / (1 + exp(-(m$zeta[1] - coef(m)[1]*dat$pared - coef(m)[2]*dat$public - coef(m)[3]*dat$gpa)))
prob2 <- 1 / (1 + exp(-(m$zeta[2] - coef(m)[1]*dat$pared - coef(m)[2]*dat$public - coef(m)[3]*dat$gpa)))
fitted <- cbind(prob1, prob2-prob1)
View(fitted)
fitted <- m$fitted.values
View(fitted)
fitted <- m$fitted.values
test2 <- cbind(prob1, prob2-prob1)
View(test2)
yevent <- cbind(as.numeric(dat$apply) >= 2, as.numeric(dat$apply) >= 3)
gq1 <- cbind(fitted[, 1], yevent[, 1])
gq1 <- gq1[order(gq1[, 1]), ]
gq2 <- cbind(fitted[, 2], yevent[, 2])
gq2 <- gq2[order(gq2[, 1]), ]
ggplot() +
geom_linerange(aes(ymin = 0, ymax = 1, x = 1:nrow(gq1), colour = factor(gq1[, 2]))) +
scale_color_manual(values = col) +
geom_line(aes(y = gq1[, 1], x = 1:nrow(gq1)), lwd = 0.8)
glm(I(as.numeric(apply) >= 2) ~ pared, family="binomial", data = dat)
t1 <- glm(I(as.numeric(apply) >= 2) ~ pared, family="binomial", data = dat)
summary(t1)
summary(m)
t1 <- glm(I(as.numeric(apply) >= 2) ~ pared + public + gpa, family="binomial", data = dat)
summary(t1)
summary(m)
t1 <- glm(I(as.numeric(apply) >= 2) ~ pared + public + gpa, family="binomial", data = dat)
Y.hat <- t1$fitted.values
Sep.Data <- data.frame(dat$apply, Y.hat)
Sep.Data <- data.frame(as.numeric(dat$apply) >= 2), Y.hat)
Sep.Data <- data.frame((as.numeric(dat$apply) >= 2), Y.hat)
Sep.Data <- Sep.Data[order(Y.hat, +Y), ]
Sep.Data <- data.frame(Y = (as.numeric(dat$apply) >= 2), Y.hat)
Sep.Data <- Sep.Data[order(Y.hat, +Y), ]
Sep.Data <- data.frame(Y = (as.numeric(dat$apply) >= 2), Y.hat = Y.hat)
Sep.Data <- Sep.Data[order(Y.hat, +Y), ]
Y = as.numeric(dat$apply) >= 2
Sep.Data <- data.frame(Y, Y.hat)
Sep.Data <- Sep.Data[order(Y.hat, +Y), ]
col<-c(rgb(red = 254, green = 232, blue = 200, max = 255),
rgb(red = 227, green = 74, blue = 51, max = 255))
library(ggplot2)
library(ggthemes)
theme_set(theme_solarized())
SepPlot <- ggplot(data=Sep.Data) +
geom_rect(aes(xmin = 0, xmax = seq(length.out = length(Y)), ymin = 0, ymax = 1),
fill = "#FEE8C8") +
geom_linerange(aes(color = factor(Y), ymin = 0, ymax = 1, x = seq(length.out = length(Y))),
alpha = 0.5) +
geom_line(aes(y = Y.hat, x = seq(length.out = length(Y))), lwd = 0.8) +
scale_color_manual(values = col) +
scale_y_continuous("Y-hat\n", breaks = c(0, 0.25, 0.5, 0.75, 1.0)) +
scale_x_continuous("", breaks = NULL) +
theme(legend.position = "none", panel.background = element_blank(), panel.grid = element_blank(),
axis.title.y = element_text(face = "bold", angle = 90))
SepPlot <- ggplot(data=Sep.Data) +
geom_rect(aes(xmin = 0, xmax = seq(length.out = length(Y)), ymin = 0, ymax = 1),
fill = "#FEE8C8") +
geom_linerange(aes(color = factor(Y), ymin = 0, ymax = 1, x = seq(length.out = length(Y))),
alpha = 0.5) +
geom_line(aes(y = Y.hat, x = seq(length.out = length(Y))), lwd = 0.8) +
scale_color_manual(values = col) +
scale_y_continuous("Y-hat\n", breaks = c(0, 0.25, 0.5, 0.75, 1.0)) +
scale_x_continuous("", breaks = NULL) +
theme(legend.position = "none", panel.background = element_blank(), panel.grid = element_blank(),
axis.title.y = element_text(face = "bold", angle = 90))
SepPlot
SepPlot <- ggplot(data=Sep.Data) +
geom_rect(aes(xmin = 0, xmax = seq(length.out = length(Y)), ymin = 0, ymax = 1),
fill = "#FEE8C8") +
geom_linerange(aes(color = factor(Y), ymin = 0, ymax = 1, x = seq(length.out = length(Y))),
alpha = 1) +
geom_line(aes(y = Y.hat, x = seq(length.out = length(Y))), lwd = 0.8) +
scale_color_manual(values = col) +
scale_y_continuous("Y-hat\n", breaks = c(0, 0.25, 0.5, 0.75, 1.0)) +
scale_x_continuous("", breaks = NULL) +
theme(legend.position = "none", panel.background = element_blank(), panel.grid = element_blank(),
axis.title.y = element_text(face = "bold", angle = 90))
SepPlot
ggplot() +
geom_linerange(aes(ymin = 0, ymax = 1, x = 1:nrow(gq1), colour = factor(gq1[, 2]))) +
scale_color_manual(values = col) +
geom_line(aes(y = gq1[, 1], x = 1:nrow(gq1)), lwd = 0.8)
binfit <- t1$fitted.values
binfit <- data.frame(t1$fitted.values)
View(binfit)
View(fitted)
fitted$test <- fitted[, 2] + fitted[, 3]
View(fitted)
fitted <- m$fitted.values
View(fitted)
fitted$test <- sum(fitted[, 2], fitted[, 3])
prob1 <- 1 / (1 + exp(-(m$zeta[1] - coef(m)[1]*dat$pared - coef(m)[2]*dat$public - coef(m)[3]*dat$gpa)))
prob2 <- 1 / (1 + exp(-(m$zeta[2] - coef(m)[1]*dat$pared - coef(m)[2]*dat$public - coef(m)[3]*dat$gpa)))
prob3 <- 1 / (1 + exp(-(m$zeta[1] - coef(m)[1]*dat$pared - coef(m)[2]*dat$public - coef(m)[3]*dat$gpa)))
test2 <- cbind(prob1, prob2-prob1)
View(test2)
test2 <- cbind(prob1, prob2-prob1, prob3-prob2)
prob1 <- 1 / (1 + exp(-(m$zeta[1] - coef(m)[1]*dat$pared - coef(m)[2]*dat$public - coef(m)[3]*dat$gpa)))
prob2 <- 1 / (1 + exp(-(m$zeta[2] - coef(m)[1]*dat$pared - coef(m)[2]*dat$public - coef(m)[3]*dat$gpa)))
prob3 <- 1 / (1 + exp(-(m$zeta[1] - coef(m)[1]*dat$pared - coef(m)[2]*dat$public - coef(m)[3]*dat$gpa)))
test2 <- cbind(prob1, prob2-prob1, prob3-prob2)
test2 <- cbind(prob1, prob2-prob1, prob3-prob2)
fitted <- m$fitted.values
View(test2)
View(fitted)
test2 <- cbind(prob1, prob2-prob1, prob3-(prob2-prob1))
test2 <- cbind(prob1, prob2-prob1, prob3)
test2 <- cbind(prob1, prob2-prob1, prob3-prob2-prob1)
test2 <- cbind(prob1, prob2-prob1, 1-prob3)
test2 <- cbind(prob1, prob2-prob1, prob3-prob2)
prob3 <- 1 / (1 + exp(-(m$zeta[3] - coef(m)[1]*dat$pared - coef(m)[2]*dat$public - coef(m)[3]*dat$gpa)))
test2 <- cbind(prob1, prob2-prob1, prob3-prob2)
m$zeta
m$zeta[3]
test2 <- cbind(prob1, prob2-prob1, 1-prob2)
ggplot() +
geom_linerange(aes(ymin = 0, ymax = 1, x = 1:nrow(gq1), colour = factor(gq1[, 2]))) +
scale_color_manual(values = col) +
geom_line(aes(y = rev(gq1[, 1]), x = 1:nrow(gq1)), lwd = 0.8)
t1 <- glm(I(as.numeric(apply) >= 3) ~ pared + public + gpa, family="binomial", data = dat)
binfit <- data.frame(t1$fitted.values)
Y.hat <- t1$fitted.values
Y = as.numeric(dat$apply) >= 3
Sep.Data <- data.frame(Y, Y.hat)
Sep.Data <- Sep.Data[order(Y.hat, +Y), ]
col<-c(rgb(red = 254, green = 232, blue = 200, max = 255),
rgb(red = 227, green = 74, blue = 51, max = 255))
library(ggplot2)
library(ggthemes)
theme_set(theme_solarized())
SepPlot <- ggplot(data=Sep.Data) +
geom_rect(aes(xmin = 0, xmax = seq(length.out = length(Y)), ymin = 0, ymax = 1),
fill = "#FEE8C8") +
geom_linerange(aes(color = factor(Y), ymin = 0, ymax = 1, x = seq(length.out = length(Y))),
alpha = 1) +
geom_line(aes(y = Y.hat, x = seq(length.out = length(Y))), lwd = 0.8) +
scale_color_manual(values = col) +
scale_y_continuous("Y-hat\n", breaks = c(0, 0.25, 0.5, 0.75, 1.0)) +
scale_x_continuous("", breaks = NULL) +
theme(legend.position = "none", panel.background = element_blank(), panel.grid = element_blank(),
axis.title.y = element_text(face = "bold", angle = 90))
SepPlot
yevent <- cbind(as.numeric(dat$apply) >= 2, as.numeric(dat$apply) >= 3)
gq1 <- cbind(fitted[, 1], yevent[, 1])
gq1 <- gq1[order(gq1[, 1]), ]
gq2 <- cbind(fitted[, 2], yevent[, 2])
gq2 <- gq2[order(gq2[, 1]), ]
ggplot() +
geom_linerange(aes(ymin = 0, ymax = 1, x = 1:nrow(gq2), colour = factor(gq2[, 2]))) +
scale_color_manual(values = col) +
geom_line(aes(y = gq2[, 1], x = 1:nrow(gq2)), lwd = 0.8)
# Data
library(tidyverse)
library(ggthemes)
library(GGally)
library(gridExtra)
library(MASS)
library(reshape2)
library(brant)
library(effects)
library(nnet)
winequality.red <- read.csv("D:/OneDrive/_Msc_/Semester 1/Linear Models/winequality-red.csv")
winequality.red <- read.csv("D:/OneDrive/_Msc_/Semester 1/Linear Models/group-proj/winequality-red.csv")
winequality.red <- read.csv("D:/OneDrive/_Msc_/Semester 1/Linear Models/group_proj/winequality-red.csv")
cormat <- ggcorr(winequality.red, geom = "blank", label = TRUE, hjust = 0.75) +
geom_point(size = 10, aes(color = coefficient > 0, alpha = abs(coefficient) >= 0.4)) +
scale_alpha_manual(values = c("TRUE" = 0.4, "FALSE" = 0)) + theme(legend.position = "none")
cormat
qual_agg <- aggregate(winequality.red[, -12], by=list(winequality.red$quality), FUN = mean)
qual_agg_long <- qual_agg[, -1] %>% gather() %>% mutate(quality = factor(rep(3:8, ncol(qual_agg)-1)))
qual_agg_long %>% ggplot(aes(x = quality, y = value)) +
facet_wrap(~key, scales = "free") +
geom_bar(stat = "identity", fill = "#1e656d", colour = "black") +
theme_minimal()
long <- winequality.red %>% gather()
long %>% ggplot(aes(x = value)) +
geom_histogram(fill = "#1e656d", colour = "black") +
facet_wrap(~key, scales = "free_x") +
theme_minimal()
# ------------------------------
# ---------------- MODEL FITTING
# ------------------------------
library(rms)
library(arm)
plot.xmean.ordinaly(quality ~ volatile.acidity + chlorides + free.sulfur.dioxide + total.sulfur.dioxide + pH + sulphates + alcohol,
data = winequality.red)
testmod <- polr(quality~alcohol,
data = winequality.red)
#cumulative logits
cofs <- testmod$coefficients
alpha <- testmod$zeta
logit1 <- alpha[1] - cofs*winequality.red$alcohol
l <- polr(quality ~ volatile.acidity + chlorides + free.sulfur.dioxide + total.sulfur.dioxide + pH + sulphates + alcohol,
data = winequality.red)
l <- polr(as.factor(quality) ~ volatile.acidity + chlorides + free.sulfur.dioxide + total.sulfur.dioxide + pH + sulphates + alcohol,
data = winequality.red)
summary(l)
l <- polr(as.factor(quality) ~ volatile.acidity + chlorides + free.sulfur.dioxide + total.sulfur.dioxide + pH + sulphates + alcohol,
data = winequality.red)
fitted <- l$fitted.values
unique(winequality.red$quality)
gq1 <- cbind(fitted[, 1], winequality.red >= 4)
gq1 <- gq1[order(gq1[, 1]), ]
ggplot() +
geom_linerange(aes(ymin = 0, ymax = 1, x = 1:nrow(gq1), colour = factor(gq1[, 2]))) +
scale_color_manual(values = col) +
geom_line(aes(y = gq1[, 1], x = 1:nrow(gq1)), lwd = 0.8)
ggplot() +
geom_linerange(aes(ymin = 0, ymax = 1, x = 1:nrow(gq1), colour = factor(gq1[, 2])))
ggplot() +
geom_linerange(aes(ymin = 0, ymax = 1, x = 1:nrow(gq1), colour = factor(gq1[, 2]))) +
scale_color_manual(values = col)
col<-c(rgb(red = 254, green = 232, blue = 200, max = 255),
rgb(red = 227, green = 74, blue = 51, max = 255))
ggplot() +
geom_linerange(aes(ymin = 0, ymax = 1, x = 1:nrow(gq1), colour = factor(gq1[, 2]))) +
scale_color_manual(values = col) +
geom_line(aes(y = gq1[, 1], x = 1:nrow(gq1)), lwd = 0.8)
sum(winequality.red$quality == 3)
sum(winequality.red$quality == 4)
sum(winequality.red$quality == 5)
gq1 <- cbind(fitted[, 4], winequality.red >= 6)
gq1 <- gq1[order(gq1[, 1]), ]
ggplot() +
geom_linerange(aes(ymin = 0, ymax = 1, x = 1:nrow(gq1), colour = factor(gq1[, 2]))) +
scale_color_manual(values = col) +
geom_line(aes(y = gq1[, 1], x = 1:nrow(gq1)), lwd = 0.8)
gq1 <- cbind(fitted[, 5], winequality.red >= 7)
gq1 <- gq1[order(gq1[, 1]), ]
ggplot() +
geom_linerange(aes(ymin = 0, ymax = 1, x = 1:nrow(gq1), colour = factor(gq1[, 2]))) +
scale_color_manual(values = col) +
geom_line(aes(y = gq1[, 1], x = 1:nrow(gq1)), lwd = 0.8)
t1 <- glm(I(as.numeric(apply) >= 3) ~ pared + public + gpa, family="binomial", data = dat)
dat <- read.dta("https://stats.idre.ucla.edu/stat/data/ologit.dta")
m <- polr(apply ~ pared + public + gpa, data = dat)
fitted <- m$fitted.values
prob1 <- 1 / (1 + exp(-(m$zeta[1] - coef(m)[1]*dat$pared - coef(m)[2]*dat$public - coef(m)[3]*dat$gpa)))
prob2 <- 1 / (1 + exp(-(m$zeta[2] - coef(m)[1]*dat$pared - coef(m)[2]*dat$public - coef(m)[3]*dat$gpa)))
prob3 <- 1 / (1 + exp(-(m$zeta[3] - coef(m)[1]*dat$pared - coef(m)[2]*dat$public - coef(m)[3]*dat$gpa)))
test2 <- cbind(prob1, prob2-prob1, 1-prob2)
yevent <- cbind(as.numeric(dat$apply) >= 2, as.numeric(dat$apply) >= 3)
gq1 <- cbind(fitted[, 1], yevent[, 1])
gq1 <- gq1[order(gq1[, 1]), ]
yevent <- cbind(as.numeric(dat$apply) <= 1, as.numeric(dat$apply) <= 2)
gq1 <- cbind(fitted[, 1], yevent[, 1])
gq1 <- gq1[order(gq1[, 1]), ]
ggplot() +
geom_linerange(aes(ymin = 0, ymax = 1, x = 1:nrow(gq1), colour = factor(gq1[, 2]))) +
scale_color_manual(values = col) +
geom_line(aes(y = gq1[, 1], x = 1:nrow(gq1)), lwd = 0.8)
t1 <- glm(I(as.numeric(apply) >= 3) ~ pared + public + gpa, family="binomial", data = dat)
binfit <- data.frame(t1$fitted.values)
Y.hat <- t1$fitted.values
Y = as.numeric(dat$apply) >= 3
Sep.Data <- data.frame(Y, Y.hat)
Sep.Data <- Sep.Data[order(Y.hat, +Y), ]
col<-c(rgb(red = 254, green = 232, blue = 200, max = 255),
rgb(red = 227, green = 74, blue = 51, max = 255))
library(ggplot2)
library(ggthemes)
theme_set(theme_solarized())
SepPlot <- ggplot(data=Sep.Data) +
geom_rect(aes(xmin = 0, xmax = seq(length.out = length(Y)), ymin = 0, ymax = 1),
fill = "#FEE8C8") +
geom_linerange(aes(color = factor(Y), ymin = 0, ymax = 1, x = seq(length.out = length(Y))),
alpha = 1) +
geom_line(aes(y = Y.hat, x = seq(length.out = length(Y))), lwd = 0.8) +
scale_color_manual(values = col) +
scale_y_continuous("Y-hat\n", breaks = c(0, 0.25, 0.5, 0.75, 1.0)) +
scale_x_continuous("", breaks = NULL) +
theme(legend.position = "none", panel.background = element_blank(), panel.grid = element_blank(),
axis.title.y = element_text(face = "bold", angle = 90))
SepPlot
t1 <- glm(I(as.numeric(apply) >= 2) ~ pared + public + gpa, family="binomial", data = dat)
binfit <- data.frame(t1$fitted.values)
Y = as.numeric(dat$apply) >= 2
Sep.Data <- data.frame(Y, Y.hat)
Y.hat <- t1$fitted.values
Sep.Data <- Sep.Data[order(Y.hat, +Y), ]
col<-c(rgb(red = 254, green = 232, blue = 200, max = 255),
rgb(red = 227, green = 74, blue = 51, max = 255))
library(ggplot2)
library(ggthemes)
theme_set(theme_solarized())
SepPlot <- ggplot(data=Sep.Data) +
geom_rect(aes(xmin = 0, xmax = seq(length.out = length(Y)), ymin = 0, ymax = 1),
fill = "#FEE8C8") +
geom_linerange(aes(color = factor(Y), ymin = 0, ymax = 1, x = seq(length.out = length(Y))),
alpha = 1) +
geom_line(aes(y = Y.hat, x = seq(length.out = length(Y))), lwd = 0.8) +
scale_color_manual(values = col) +
scale_y_continuous("Y-hat\n", breaks = c(0, 0.25, 0.5, 0.75, 1.0)) +
scale_x_continuous("", breaks = NULL) +
theme(legend.position = "none", panel.background = element_blank(), panel.grid = element_blank(),
axis.title.y = element_text(face = "bold", angle = 90))
SepPlot
t1 <- glm(I(as.numeric(apply) >= 2) ~ pared + public + gpa, family="binomial", data = dat)
Y.hat <- t1$fitted.values
Y = as.numeric(dat$apply) >= 2
Sep.Data <- data.frame(Y, Y.hat)
Sep.Data <- Sep.Data[order(Y.hat, +Y), ]
col<-c(rgb(red = 254, green = 232, blue = 200, max = 255),
rgb(red = 227, green = 74, blue = 51, max = 255))
library(ggplot2)
library(ggthemes)
theme_set(theme_solarized())
SepPlot <- ggplot(data=Sep.Data) +
geom_rect(aes(xmin = 0, xmax = seq(length.out = length(Y)), ymin = 0, ymax = 1),
fill = "#FEE8C8") +
geom_linerange(aes(color = factor(Y), ymin = 0, ymax = 1, x = seq(length.out = length(Y))),
alpha = 0.5) +
geom_line(aes(y = Y.hat, x = seq(length.out = length(Y))), lwd = 0.8) +
scale_color_manual(values = col) +
scale_y_continuous("Y-hat\n", breaks = c(0, 0.25, 0.5, 0.75, 1.0)) +
scale_x_continuous("", breaks = NULL) +
theme(legend.position = "none", panel.background = element_blank(), panel.grid = element_blank(),
axis.title.y = element_text(face = "bold", angle = 90))
SepPlot
SepPlot <- ggplot(data=Sep.Data) +
geom_rect(aes(xmin = 0, xmax = seq(length.out = length(Y)), ymin = 0, ymax = 1),
fill = "#FEE8C8") +
geom_linerange(aes(color = factor(Y), ymin = 0, ymax = 1, x = seq(length.out = length(Y))),
alpha = 1) +
geom_line(aes(y = Y.hat, x = seq(length.out = length(Y))), lwd = 0.8) +
scale_color_manual(values = col) +
scale_y_continuous("Y-hat\n", breaks = c(0, 0.25, 0.5, 0.75, 1.0)) +
scale_x_continuous("", breaks = NULL) +
theme(legend.position = "none", panel.background = element_blank(), panel.grid = element_blank(),
axis.title.y = element_text(face = "bold", angle = 90))
SepPlot
ggplot() + theme(legend.position = "none") +
geom_linerange(aes(ymin = 0, ymax = 1, x = 1:nrow(gq2), colour = factor(gq2[, 2]))) +
scale_color_manual(values = col) +
geom_line(aes(y = gq2[, 1], x = 1:nrow(gq2)), lwd = 0.8)
ggplot() + theme(legend.position = "none") +
geom_linerange(aes(ymin = 0, ymax = 1, x = 1:nrow(gq1), colour = factor(gq1[, 2]))) +
scale_color_manual(values = col) +
geom_line(aes(y = gq1[, 1], x = 1:nrow(gq1)), lwd = 0.8)
SepPlot
fitted <- l$fitted.values
gq1 <- cbind(fitted[, 5], winequality.red >= 7)
gq1 <- gq1[order(gq1[, 1]), ]
ggplot() +
geom_linerange(aes(ymin = 0, ymax = 1, x = 1:nrow(gq1), colour = factor(gq1[, 2]))) +
scale_color_manual(values = col) +
geom_line(aes(y = gq1[, 1], x = 1:nrow(gq1)), lwd = 0.8)
gq1 <- cbind(fitted[, 5], winequality.red <= 7)
gq1 <- gq1[order(gq1[, 1]), ]
ggplot() +
geom_linerange(aes(ymin = 0, ymax = 1, x = 1:nrow(gq1), colour = factor(gq1[, 2]))) +
scale_color_manual(values = col) +
geom_line(aes(y = gq1[, 1], x = 1:nrow(gq1)), lwd = 0.8)
data <- read.csv("winequality-red.csv")
library(blogdown)
setwd("D:/onedrive/github/blog_source/")
new_post("Score Residual Plots for Ordinal Logistic Regression")
wines <- read.csv("wines.csv", sep="")
wines$points <- as.factor(wines$points)
f <- lrm(points ~ price, data = wines, x = TRUE, y = TRUE)
resid(f1 , 'score.binary', pl = TRUE)
library(lrm)
library(rms)
f <- lrm(points ~ price, data = wines, x = TRUE, y = TRUE)
resid(f , 'score.binary', pl = TRUE)
library(MASS)
m <- polr(points ~ price, data = wines)
prob1 <- 1 / (1 + exp(-(m$zeta[1] - coef(m) * wines$price)))
prob2 <- 1 / (1 + exp(-(m$zeta[2] - coef(m) * wines$price)))
prob3 <- 1 / (1 + exp(-(m$zeta[3] - coef(m) * wines$price)))
library(MASS)
m <- polr(points ~ price, data = wines)
mean(wines$price * ((wines$points >= 1) - plogis(wines$price * m$coefficients[4] + m$coefficients[1])))
mean(wines$price * ((wines$points >= 2) - plogis(wines$price * m$coefficients[4] + m$coefficients[2])))
mean(wines$price * ((wines$points >= 3) - plogis(wines$price * m$coefficients[4] + m$coefficients[3])))
library(MASS)
m <- polr(points ~ price, data = wines)
wines$points <- as.numeric(wines$points)
mean(wines$price * ((wines$points >= 1) - plogis(wines$price * m$coefficients[4] + m$coefficients[1])))
mean(wines$price * ((wines$points >= 2) - plogis(wines$price * m$coefficients[4] + m$coefficients[2])))
mean(wines$price * ((wines$points >= 3) - plogis(wines$price * m$coefficients[4] + m$coefficients[3])))
library(MASS)
m <- polr(points ~ price, data = wines)
wines <- read.csv("wines.csv", sep="")
wines$points <- as.factor(wines$points)
library(MASS)
m <- polr(points ~ price, data = wines)
wines$points <- as.numeric(wines$points)
mean(wines$price * ((wines$points >= 1) - plogis(wines$price * m$coefficients + m$zeta[1])))
mean(wines$price * ((wines$points >= 2) - plogis(wines$price * m$coefficients + m$zeta[2])))
mean(wines$price * ((wines$points >= 3) - plogis(wines$price * m$coefficients + m$zeta[3])))
library(MASS)
m <- polr(points ~ price, data = wines)
wines <- read.csv("wines.csv", sep="")
wines$points <- as.factor(wines$points)
library(MASS)
wines$points <- as.factor(wines$points)
m <- polr(points ~ price, data = wines)
wines$points <- as.numeric(wines$points)
m$zeta
mean(wines$price * ((wines$points >= 1) - plogis(wines$price * m$coefficients + m$zeta[1])))
mean(wines$price * ((wines$points >= 2) - plogis(wines$price * m$coefficients + m$zeta[2])))
mean(wines$price * ((wines$points >= 3) - plogis(wines$price * m$coefficients + m$zeta[3])))
mean(wines$price * ((wines$points >= 1) - plogis(wines$price * f1$coefficients[4] + f1$coefficients[1])))
wines <- read.csv("wines.csv", sep = "")
library(MASS)
m1 <- polr(as.factor(points)~price, data = wines)
summary(m1)
m1$zeta
prob1 <- 1 / (1 + exp(-(m1$zeta[1] - coef(m1) * wines$price)))
prob2 <- 1 / (1 + exp(-(m1$zeta[2] - coef(m1) * wines$price)))
prob3 <- 1 / (1 + exp(-(m1$zeta[3] - coef(m1) * wines$price)))
wine2 <- wines[wines$points %in% c(0, 1, 2), ]
library(rms)
f1 <- lrm(as.factor(points) ~ price, data = wines, x = TRUE, y = TRUE)
resid(f1 , 'score.binary', pl = TRUE)
summary(f1)
test <- wines$price * (ifelse(wines$points > 1, 1, 0) - prob1)
mean(test)
test <- m1$fitted.values
X <- cbind(1, test)
k <- f1$non.slopes
Y <- f1$y
y <- as.numeric(Y) >= 1
xtest <- f1$linear.predictors[1:5]
xtest
test2 <- wines$price * f1$coefficients[4] + f1$coefficients[1]
test2[1:5]
mean(wines$price * ((wines$points >= 1) - plogis(wines$price * f1$coefficients[4] + f1$coefficients[1])))
mean(wines$price * ((wines$points >= 2) - plogis(wines$price * f1$coefficients[4] + f1$coefficients[2])))
mean(wines$price * ((wines$points >= 3) - plogis(wines$price * f1$coefficients[4] + f1$coefficients[3])))
getwd()
setwd("D:/onedrive/github/blog_source/content/posts")
wines <- read.csv("wines.csv", sep = "")
library(MASS)
m1 <- polr(as.factor(points)~price, data = wines)
summary(m1)
m1$zeta
library(rms)
f1 <- lrm(as.factor(points) ~ price, data = wines, x = TRUE, y = TRUE)
resid(f1 , 'score.binary', pl = TRUE)
summary(f1)
resid(f1 , 'score.binary', pl = TRUE)
test <- wines$price * (ifelse(wines$points > 1, 1, 0) - prob1)
mean(test)
test <- m1$fitted.values
X <- cbind(1, test)
k <- f1$non.slopes
Y <- f1$y
y <- as.numeric(Y) >= 1
xtest <- f1$linear.predictors[1:5]
xtest
test2 <- wines$price * f1$coefficients[4] + f1$coefficients[1]
test2[1:5]
mean(wines$price * ((wines$points >= 1) - plogis(wines$price * f1$coefficients[4] + f1$coefficients[1])))
mean(wines$price * ((wines$points >= 2) - plogis(wines$price * f1$coefficients[4] + f1$coefficients[2])))
mean(wines$price * ((wines$points >= 3) - plogis(wines$price * f1$coefficients[4] + f1$coefficients[3])))
wines <- read.csv("wines.csv", sep="")
wines$points <- as.factor(wines$points)
library(rms)
f <- lrm(points ~ price, data = wines, x = TRUE, y = TRUE)
resid(f , 'score.binary', pl = TRUE)
library(MASS)
wines$points <- as.factor(wines$points)
m <- polr(points ~ price, data = wines)
wines$points <- as.numeric(wines$points)
m$zeta
mean(wines$price * ((wines$points >= 1) - plogis(wines$price * m$coefficients + m$zeta[1])))
mean(wines$price * ((wines$points >= 2) - plogis(wines$price * m$coefficients + m$zeta[2])))
mean(wines$price * ((wines$points >= 3) - plogis(wines$price * m$coefficients + m$zeta[3])))
library(MASS)
wines$points <- as.factor(wines$points)
m <- polr(points ~ price, data = wines)
wines$points <- as.numeric(wines$points)
mean(wines$price * ((wines$points >= 1) - plogis(wines$price * m$coefficients + m$zeta[1])))
mean(wines$price * ((wines$points >= 2) - plogis(wines$price * m$coefficients + m$zeta[2])))
mean(wines$price * ((wines$points >= 3) - plogis(wines$price * m$coefficients + m$zeta[3])))
library(MASS)
wines$points <- as.factor(wines$points)
m <- polr(points ~ price, data = wines)
wines$points <- as.numeric(wines$points)
mean(wines$price * ((wines$points >= 1) - plogis(wines$price * f$coefficients[4] + f$coefficients[1])))
mean(wines$price * ((wines$points >= 2) - plogis(wines$price * f$coefficients[4] + f$coefficients[2])))
mean(wines$price * ((wines$points >= 3) - plogis(wines$price * f$coefficients[4] + f$coefficients[3])))
wines <- read.csv("wines.csv", sep="")
wines$points <- as.factor(wines$points)
library(rms)
f <- lrm(points ~ price, data = wines, x = TRUE, y = TRUE)
resid(f , 'score.binary', pl = TRUE)
library(MASS)
m <- polr(points ~ price, data = wines)
wines$points <- as.numeric(wines$points)
mean(wines$price * ((wines$points >= 1) - plogis(wines$price * f$coefficients[4] + f$coefficients[1])))
mean(wines$price * ((wines$points >= 2) - plogis(wines$price * f$coefficients[4] + f$coefficients[2])))
mean(wines$price * ((wines$points >= 3) - plogis(wines$price * f$coefficients[4] + f$coefficients[3])))
