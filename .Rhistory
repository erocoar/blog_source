mutate(Shape = as.factor(Shape))
overall <- wines %>% mutate(pointInt = as.integer(points) -1) %>% select(pointInt) %>%
mutate("Y>=1" = qlogis(mean(pointInt >= 1)), "Y>=2" = qlogis(mean(pointInt >= 2))) %>%
slice(1) %>% gather(key = "Shape", value = "value", "Y>=1", "Y>=2") %>% select(-pointInt)
xmin <- min(values); xmax <- max(values); n <- nrow(strataggPrice)
ggplot() + theme_minimal()  +
xlim(c(xmin - 1.2, xmax)) +
ylim(c(0, nrow(values))) +
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = 3:(n+2), yend = 3:(n+2)), colour = "grey") +
geom_point(data = provLong, aes(x = value, y = rev(as.numeric(Interval)) + 2, shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggProv$Interval), x = rep(min(values) - 0.75, 4), y = 3:6)) +
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n), y = (n+5):(2*n+4), yend = (n+5):(2*n+4)),
colour = "grey") +
geom_point(data = priceLong, aes(x = value, y = rev(as.numeric(Interval)) + n + 4, shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggPrice$Interval), x = rep(min(values) - 0.75), y = (n+5):(2*n+4))) +
geom_segment(aes(x = xmin, xend = xmax, y = 1, yend = 1), colour = "grey") +
geom_point(data = overall, aes(x = value, y = 1, shape = Shape), size = 3) +
theme(axis.ticks.y = element_blank()) +
theme(axis.text.y = element_blank())  +
theme(axis.title.y = element_blank())
priceLong <- strataggPrice %>% gather(key = "Shape", value = "value", "Y>=1", "Y>=2") %>%
mutate(Shape = as.factor(Shape))
provLong  <- strataggProv  %>% gather(key = "Shape", value = "value", "Y>=1", "Y>=2") %>%
mutate(Shape = as.factor(Shape))
overall <- wines %>% mutate(pointInt = as.integer(points) -1) %>% select(pointInt) %>%
mutate("Y>=1" = qlogis(mean(pointInt >= 1)), "Y>=2" = qlogis(mean(pointInt >= 2))) %>%
slice(1) %>% gather(key = "Shape", value = "value", "Y>=1", "Y>=2") %>% select(-pointInt)
xmin <- min(values); xmax <- max(values); n <- nrow(strataggPrice)
ggplot() + theme_minimal()  +
xlim(c(xmin - 1.2, xmax)) +
ylim(c(-1, nrow(values))) +
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = 3:(n+2), yend = 3:(n+2)), colour = "grey") +
geom_point(data = provLong, aes(x = value, y = rev(as.numeric(Interval)) + 2, shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggProv$Interval), x = rep(min(values) - 0.75, 4), y = 3:6)) +
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n), y = (n+5):(2*n+4), yend = (n+5):(2*n+4)),
colour = "grey") +
geom_point(data = priceLong, aes(x = value, y = rev(as.numeric(Interval)) + n + 4, shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggPrice$Interval), x = rep(min(values) - 0.75), y = (n+5):(2*n+4))) +
geom_segment(aes(x = xmin, xend = xmax, y = 0, yend = 0), colour = "grey") +
geom_point(data = overall, aes(x = value, y = 0, shape = Shape), size = 3) +
theme(axis.ticks.y = element_blank()) +
theme(axis.text.y = element_blank())  +
theme(axis.title.y = element_blank())
(n+5):(2*n+4)
priceLong <- strataggPrice %>% gather(key = "Shape", value = "value", "Y>=1", "Y>=2") %>%
mutate(Shape = as.factor(Shape))
provLong  <- strataggProv  %>% gather(key = "Shape", value = "value", "Y>=1", "Y>=2") %>%
mutate(Shape = as.factor(Shape))
overall <- wines %>% mutate(pointInt = as.integer(points) -1) %>% select(pointInt) %>%
mutate("Y>=1" = qlogis(mean(pointInt >= 1)), "Y>=2" = qlogis(mean(pointInt >= 2))) %>%
slice(1) %>% gather(key = "Shape", value = "value", "Y>=1", "Y>=2") %>% select(-pointInt)
xmin <- min(values); xmax <- max(values); n <- nrow(strataggPrice)
ggplot() + theme_minimal()  +
xlim(c(xmin - 1.2, xmax)) +
ylim(c(-1, nrow(values))) +
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = 3:(n+2), yend = 3:(n+2)), colour = "grey") +
geom_point(data = provLong, aes(x = value, y = rev(as.numeric(Interval)) + 2, shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggProv$Interval), x = rep(min(values) - 0.75, 4), y = 3:6)) +
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = (n+5):(2*n+4), yend = (n+5):(2*n+4)), colour = "grey") +
geom_point(data = priceLong, aes(x = value, y = rev(as.numeric(Interval)) + n + 4, shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggPrice$Interval), x = rep(min(values) - 0.75), y = (n+5):(2*n+4))) +
geom_segment(aes(x = xmin, xend = xmax, y = 0, yend = 0), colour = "grey") +
geom_point(data = overall, aes(x = value, y = 0, shape = Shape), size = 3) +
geom_text(aes(label = c("Price", "Province", "Overall"), x = rep(min(values) - 0.75, 3), y = c(13, 6, 1)) +
theme(axis.ticks.y = element_blank()) +
theme(axis.text.y = element_blank())  +
theme(axis.title.y = element_blank())
priceLong <- strataggPrice %>% gather(key = "Shape", value = "value", "Y>=1", "Y>=2") %>%
mutate(Shape = as.factor(Shape))
provLong  <- strataggProv  %>% gather(key = "Shape", value = "value", "Y>=1", "Y>=2") %>%
mutate(Shape = as.factor(Shape))
overall <- wines %>% mutate(pointInt = as.integer(points) -1) %>% select(pointInt) %>%
mutate("Y>=1" = qlogis(mean(pointInt >= 1)), "Y>=2" = qlogis(mean(pointInt >= 2))) %>%
slice(1) %>% gather(key = "Shape", value = "value", "Y>=1", "Y>=2") %>% select(-pointInt)
xmin <- min(values); xmax <- max(values); n <- nrow(strataggPrice)
ggplot() + theme_minimal()  +
xlim(c(xmin - 1.2, xmax)) +
ylim(c(-1, nrow(values))) +
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = 3:(n+2), yend = 3:(n+2)), colour = "grey") +
geom_point(data = provLong, aes(x = value, y = rev(as.numeric(Interval)) + 2, shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggProv$Interval), x = rep(min(values) - 0.75, 4), y = 3:6)) +
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = (n+5):(2*n+4), yend = (n+5):(2*n+4)), colour = "grey") +
geom_point(data = priceLong, aes(x = value, y = rev(as.numeric(Interval)) + n + 4, shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggPrice$Interval), x = rep(min(values) - 0.75), y = (n+5):(2*n+4))) +
geom_segment(aes(x = xmin, xend = xmax, y = 0, yend = 0), colour = "grey") +
geom_point(data = overall, aes(x = value, y = 0, shape = Shape), size = 3) +
geom_text(aes(label = c("Price", "Province", "Overall"), x = rep(min(values) - 0.75, 3), y = c(13, 6, 1))) +
theme(axis.ticks.y = element_blank()) +
theme(axis.text.y = element_blank())  +
theme(axis.title.y = element_blank())
priceLong <- strataggPrice %>% gather(key = "Shape", value = "value", "Y>=1", "Y>=2") %>%
mutate(Shape = as.factor(Shape))
provLong  <- strataggProv  %>% gather(key = "Shape", value = "value", "Y>=1", "Y>=2") %>%
mutate(Shape = as.factor(Shape))
overall <- wines %>% mutate(pointInt = as.integer(points) -1) %>% select(pointInt) %>%
mutate("Y>=1" = qlogis(mean(pointInt >= 1)), "Y>=2" = qlogis(mean(pointInt >= 2))) %>%
slice(1) %>% gather(key = "Shape", value = "value", "Y>=1", "Y>=2") %>% select(-pointInt)
xmin <- min(values); xmax <- max(values); n <- nrow(strataggPrice)
ggplot() + theme_minimal()  +
xlim(c(xmin - 1.2, xmax)) +
ylim(c(-1, nrow(values))) +
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = 3:(n+2), yend = 3:(n+2)), colour = "grey") +
geom_point(data = provLong, aes(x = value, y = rev(as.numeric(Interval)) + 2, shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggProv$Interval), x = rep(min(values) - 0.75, 4), y = 3:6)) +
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = (n+5):(2*n+4), yend = (n+5):(2*n+4)), colour = "grey") +
geom_point(data = priceLong, aes(x = value, y = rev(as.numeric(Interval)) + n + 4, shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggPrice$Interval), x = rep(min(values) - 0.75), y = (n+5):(2*n+4))) +
geom_segment(aes(x = xmin, xend = xmax, y = 0, yend = 0), colour = "grey") +
geom_point(data = overall, aes(x = value, y = 0, shape = Shape), size = 3) +
geom_text(aes(label = c("Price", "Province", "Overall"), x = rep(min(values) - 0.75, 3), y = c(13, 7, 1))) +
theme(axis.ticks.y = element_blank()) +
theme(axis.text.y = element_blank())  +
theme(axis.title.y = element_blank())
priceLong <- strataggPrice %>% gather(key = "Shape", value = "value", "Y>=1", "Y>=2") %>%
mutate(Shape = as.factor(Shape))
provLong  <- strataggProv  %>% gather(key = "Shape", value = "value", "Y>=1", "Y>=2") %>%
mutate(Shape = as.factor(Shape))
overall <- wines %>% mutate(pointInt = as.integer(points) -1) %>% select(pointInt) %>%
mutate("Y>=1" = qlogis(mean(pointInt >= 1)), "Y>=2" = qlogis(mean(pointInt >= 2))) %>%
slice(1) %>% gather(key = "Shape", value = "value", "Y>=1", "Y>=2") %>% select(-pointInt)
xmin <- min(values); xmax <- max(values); n <- nrow(strataggPrice)
ggplot() + theme_minimal()  +
xlim(c(xmin - 1.2, xmax)) +
ylim(c(-1, nrow(values))) +
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = 3:(n+2), yend = 3:(n+2)), colour = "grey") +
geom_point(data = provLong, aes(x = value, y = rev(as.numeric(Interval)) + 2, shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggProv$Interval), x = rep(min(values) - 0.75, 4), y = 3:6)) +
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = (n+5):(2*n+4), yend = (n+5):(2*n+4)), colour = "grey") +
geom_point(data = priceLong, aes(x = value, y = rev(as.numeric(Interval)) + n + 4, shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggPrice$Interval), x = rep(min(values) - 0.75), y = (n+5):(2*n+4))) +
geom_segment(aes(x = xmin, xend = xmax, y = 0, yend = 0), colour = "grey") +
geom_point(data = overall, aes(x = value, y = 0, shape = Shape), size = 3) +
geom_text(aes(label = c("Price", "Province", "Overall"), x = rep(min(values) - 0.75, 3), y = c(13, 7, 1)),
fontface = "bold") +
theme(axis.ticks.y = element_blank()) +
theme(axis.text.y = element_blank())  +
theme(axis.title.y = element_blank())
nrow(values)
priceLong <- strataggPrice %>% gather(key = "Shape", value = "value", "Y>=1", "Y>=2") %>%
mutate(Shape = as.factor(Shape))
provLong  <- strataggProv  %>% gather(key = "Shape", value = "value", "Y>=1", "Y>=2") %>%
mutate(Shape = as.factor(Shape))
overall <- wines %>% mutate(pointInt = as.integer(points) -1) %>% select(pointInt) %>%
mutate("Y>=1" = qlogis(mean(pointInt >= 1)), "Y>=2" = qlogis(mean(pointInt >= 2))) %>%
slice(1) %>% gather(key = "Shape", value = "value", "Y>=1", "Y>=2") %>% select(-pointInt)
xmin <- min(values); xmax <- max(values); n <- nrow(strataggPrice)
ggplot() + theme_minimal()  +
xlim(c(xmin - 1.2, xmax)) +
ylim(c(-1, nrow(values)-3)) +
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = 3:(n+2), yend = 3:(n+2)), colour = "grey") +
geom_point(data = provLong, aes(x = value, y = rev(as.numeric(Interval)) + 2, shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggProv$Interval), x = rep(min(values) - 0.75, 4), y = 3:6)) +
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = (n+5):(2*n+4), yend = (n+5):(2*n+4)), colour = "grey") +
geom_point(data = priceLong, aes(x = value, y = rev(as.numeric(Interval)) + n + 4, shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggPrice$Interval), x = rep(min(values) - 0.75), y = (n+5):(2*n+4))) +
geom_segment(aes(x = xmin, xend = xmax, y = 0, yend = 0), colour = "grey") +
geom_point(data = overall, aes(x = value, y = 0, shape = Shape), size = 3) +
geom_text(aes(label = c("Price", "Province", "Overall"), x = rep(min(values) - 0.75, 3), y = c(13, 7, 1)),
fontface = "bold") +
theme(axis.ticks.y = element_blank()) +
theme(axis.text.y = element_blank())  +
theme(axis.title.y = element_blank())
priceLong <- strataggPrice %>% gather(key = "Shape", value = "value", "Y>=1", "Y>=2") %>%
mutate(Shape = as.factor(Shape))
provLong  <- strataggProv  %>% gather(key = "Shape", value = "value", "Y>=1", "Y>=2") %>%
mutate(Shape = as.factor(Shape))
overall <- wines %>% mutate(pointInt = as.integer(points) -1) %>% select(pointInt) %>%
mutate("Y>=1" = qlogis(mean(pointInt >= 1)), "Y>=2" = qlogis(mean(pointInt >= 2))) %>%
slice(1) %>% gather(key = "Shape", value = "value", "Y>=1", "Y>=2") %>% select(-pointInt)
xmin <- min(values); xmax <- max(values); n <- nrow(strataggPrice)
ggplot() + theme_minimal()  +
xlim(c(xmin - 1.2, xmax)) +
ylim(c(-1, nrow(values)-3)) +
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = 3:(n+2), yend = 3:(n+2)), colour = "grey") +
geom_point(data = provLong, aes(x = value, y = rev(as.numeric(Interval)) + 2, shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggProv$Interval), x = rep(min(values) - 0.75, 4), y = 3:6)) +
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = (n+5):(2*n+4), yend = (n+5):(2*n+4)), colour = "grey") +
geom_point(data = priceLong, aes(x = value, y = rev(as.numeric(Interval)) + n + 4, shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggPrice$Interval), x = rep(min(values) - 0.75), y = (n+5):(2*n+4))) +
geom_segment(aes(x = xmin, xend = xmax, y = 0, yend = 0), colour = "grey") +
geom_point(data = overall, aes(x = value, y = 0, shape = Shape), size = 3) +
geom_text(aes(label = c("Price", "Province", "Overall"), x = rep(min(values) - 0.75, 3), y = c(13, 7, 1)),
fontface = "bold") +
xlab("Logit") +
theme(axis.ticks.y = element_blank()) +
theme(axis.text.y = element_blank())  +
theme(axis.title.y = element_blank())
library(effects)
# fit the full model
fm <- polr(points ~ price + province, data = wines)
plot(Effect(focal.predictors = c("price, province"), mod = fm), rug = FALSE, style="stacked")
library(effects)
# fit the full model
fm <- polr(points ~ price + province, data = wines)
plot(Effect(focal.predictors = c("price", "province"), mod = fm), rug = FALSE, style="stacked")
library(effects)
# fit the full model
fm <- polr(points ~ price + province, data = wines)
plot(Effect(focal.predictors = c("price", "province"), mod = fm), rug = TRUE, style="stacked")
library(effects)
# fit the full model
fm <- polr(points ~ price + province, data = wines)
plot(Effect(focal.predictors = c("price", "province"), mod = fm), rug = TRUE, style="stacked")
plot(Effect(focal.predictors = c("price", "province"), mod = fm), rug = F, style="stacked")
library(effects)
# fit the full model
fm <- polr(points ~ price + province, data = wines)
plot(Effect(focal.predictors = c("price", "province"), mod = fm), style="stacked")
library(effects)
# fit the full model
fm <- polr(points ~ price + province, data = wines)
plot(Effect(focal.predictors = c("price", "province"), mod = fm),
xlevels = list(price = seq(min(price), max(price), length.out = 100)), style="stacked")
library(effects)
# fit the full model
fm <- polr(points ~ price + province, data = wines)
plot(Effect(focal.predictors = c("price", "province"), mod = fm),
xlevels = list(price = seq(min(wines$price), max(wines$price), length.out = 100)), style="stacked")
library(effects)
# fit the full model
fm <- polr(points ~ price + province, data = wines)
plot(Effect(focal.predictors = c("price", "province"), mod = fm),
xlevels = list(price = seq(min(wines$price), max(wines$price), length.out = 100)),
rug = FALSE, style="stacked")
library(effects)
# fit the full model
fm <- polr(points ~ price + province, data = wines)
plot(Effect(focal.predictors = c("price", "province"), mod = fm,
xlevels = list(price = seq(min(wines$price), max(wines$price), length.out = 100))),
rug = FALSE, style="stacked")
library(effects)
# fit the full model
fm <- polr(points ~ price + province, data = wines)
plot(Effect(focal.predictors = c("price", "province"), mod = fm,
xlevels = list(price = seq(min(wines$price), max(wines$price), length.out = 100))),
rug = T, style="stacked")
library(effects)
# fit the full model
fm <- polr(points ~ price + province, data = wines)
plot(Effect(focal.predictors = c("price", "province"), mod = fm,
xlevels = list(price = seq(min(wines$price), max(wines$price), length.out = 100))),
style="stacked")
unique(wines$province)
length(unique(wines$province))
predDat <- cbind(predDat, predict(fm, predDat, type = "probs"))
predDat <- data.frame(
price = rep(seq(min(wines$price), max(wines$price), length.out = 200), length(unique(wines$province))),
province = rep(wines$province, each = 200)
)
predDat <- cbind(predDat, predict(fm, predDat, type = "probs"))
predDat
testing <- head(predDat)
testing
testing %>% gather()
testing
testing %>% gather(key = c(price, province))
testing %>% gather(key = point, value = c("val", "prov"))
testing
testing %>% select(-province) %>% gather()
testing %>% select(-province) %>% gather(key = price)
predData
predDat
testing
testing %>% gather(key = c(price, province))
testing %>% gather(key = price, province)
testing
testing %>% gather(key = tester, 0, 1, 2, 3)
testing %>% gather(key = test, "0", "1", "2", "3")
testing
testing %>% gather(x, value, 0:3)
testing %>% gather(x, value, "0", "1", "2", "3")
predDat <- data.frame(
price = rep(seq(min(wines$price), max(wines$price), length.out = 200), length(unique(wines$province))),
province = rep(wines$province, each = 200)
)
predDat <- cbind(predDat, predict(fm, predDat, type = "probs"))
predLong <- predDat %>% gather(category, value, "0", "1", "2", "3")
#colour palette for fill
f <- colorRampPalette(c("darkblue", "lightblue"))
#plot
ggplot(predLong, aes(x = price, y = value, fill = category)) +
geom_area(position = position_stack(reverse = TRUE)) +
scale_fill_manual(values = f(4)) +
geom_line(position = position_stack(reverse = TRUE)) +
theme_minimal()
ggplot(predLong, aes(x = price, y = value, fill = category)) +
geom_area(position = position_stack(reverse = TRUE)) +
scale_fill_manual(values = f(4)) +
geom_line(position = position_stack(reverse = TRUE)) +
facet_wrap(~province)
theme_minimal()
ggplot(predLong[predLong$province=="California"], aes(x = price, y = value, fill = category)) +
geom_area(position = position_stack(reverse = TRUE)) +
scale_fill_manual(values = f(4)) +
geom_line(position = position_stack(reverse = TRUE)) +
theme_minimal()
ggplot(predLong[predLong$province=="California", ], aes(x = price, y = value, fill = category)) +
geom_area(position = position_stack(reverse = TRUE)) +
scale_fill_manual(values = f(4)) +
geom_line(position = position_stack(reverse = TRUE)) +
theme_minimal()
head(predLong)
predLong[predLong$province=="California", ]
predDat <- data.frame(
price = rep(seq(min(wines$price), max(wines$price), length.out = 200), length(unique(wines$province))),
province = rep(wines$province, each = 200)
)
```{r}
predDat <- data.frame(
price = rep(seq(min(wines$price), max(wines$price), length.out = 200), length(unique(wines$province))),
province = rep(wines$province, each = 200)
)
length(rep(seq(min(wines$price), max(wines$price), length.out = 200), length(unique(wines$province))))
predDat <- data.frame(
price = rep(seq(min(wines$price), max(wines$price), length.out = 200), length(unique(wines$province))),
province = rep(wines$province, each = 200)
)
length(rep(wines$province, each = 200))
rep(wines$province, each = 2)
levels(wines$province)
rep(levels(wines$province, each = 2))
rep(levels(wines$province), each = 2)
predDat <- data.frame(
price = rep(seq(min(wines$price), max(wines$price), length.out = 200), length(unique(wines$province))),
province = rep(levels(wines$province), each = 200)
)
predDat <- cbind(predDat, predict(fm, predDat, type = "probs"))
predDat <- data.frame(
price = rep(seq(min(wines$price), max(wines$price), length.out = 200), length(unique(wines$province))),
province = rep(levels(wines$province), each = 200)
)
predDat <- cbind(predDat, predict(fm, predDat, type = "probs"))
predLong <- predDat %>% gather(category, value, "0", "1", "2", "3")
#colour palette for fill
f <- colorRampPalette(c("darkblue", "lightblue"))
#plot
ggplot(predLong, aes(x = price, y = value, fill = category)) +
geom_area(position = position_stack(reverse = TRUE)) +
scale_fill_manual(values = f(4)) +
geom_line(position = position_stack(reverse = TRUE)) +
facet_wrap(~province)
theme_minimal()
predDat <- data.frame(
price = rep(seq(min(wines$price), max(wines$price), length.out = 200), length(unique(wines$province))),
province = rep(levels(wines$province), each = 200)
)
predDat <- cbind(predDat, predict(fm, predDat, type = "probs"))
predLong <- predDat %>% gather(category, value, "0", "1", "2", "3")
#colour palette for fill
f <- colorRampPalette(c("darkblue", "lightblue"))
#plot
ggplot(predLong, aes(x = price, y = value, fill = category)) +
geom_area(position = position_stack(reverse = TRUE)) +
scale_fill_manual(values = f(4)) +
geom_line(position = position_stack(reverse = TRUE)) +
facet_wrap(~province) +
theme_minimal()
predDat <- data.frame(
price = rep(seq(min(wines$price), max(wines$price), length.out = 200), length(unique(wines$province))),
province = rep(levels(wines$province), each = 200)
)
predDat <- cbind(predDat, predict(fm, predDat, type = "probs"))
predLong <- predDat %>% gather(category, value, "0", "1", "2", "3")
#colour palette for fill
f <- colorRampPalette(c("darkblue", "lightblue"))
#plot
ggplot(predLong, aes(x = price, y = value, fill = category)) +
geom_area(position = position_stack(reverse = TRUE)) +
scale_fill_manual(values = f(4)) +
geom_line(position = position_stack(reverse = TRUE)) +
facet_wrap(~province, nrow = 4) +
theme_minimal()
predDat <- data.frame(
price = rep(seq(min(wines$price), max(wines$price), length.out = 200), length(unique(wines$province))),
province = rep(levels(wines$province), each = 200)
)
predDat <- cbind(predDat, predict(fm, predDat, type = "probs"))
predLong <- predDat %>% gather(category, value, "0", "1", "2", "3")
#colour palette for fill
f <- colorRampPalette(c("darkblue", "lightblue"))
#plot
ggplot(predLong, aes(x = price, y = value, fill = category)) +
geom_area(position = position_stack(reverse = TRUE)) +
scale_fill_manual(values = f(4)) +
geom_line(position = position_stack(reverse = TRUE)) +
facet_wrap(~province, nrow = 1) +
theme_minimal()
predDat <- data.frame(
price = rep(seq(min(wines$price), max(wines$price), length.out = 200), length(unique(wines$province))),
province = rep(levels(wines$province), each = 200)
)
predDat <- cbind(predDat, predict(fm, predDat, type = "probs"))
predLong <- predDat %>% gather(Points, value, "0", "1", "2", "3")
#colour palette for fill
f <- colorRampPalette(c("darkblue", "lightblue"))
#plot
ggplot(predLong, aes(x = price, y = value, fill = Points)) +
geom_area(position = position_stack(reverse = TRUE)) +
scale_fill_manual(values = f(4)) +
geom_line(position = position_stack(reverse = TRUE)) +
facet_wrap(~province, nrow = 1) +
ylab("Probability") + xlab("Price") +
theme_minimal()
predDat <- data.frame(
price = rep(seq(min(wines$price), max(wines$price), length.out = 200), length(unique(wines$province))),
province = rep(levels(wines$province), each = 200)
)
predDat <- cbind(predDat, predict(fm, predDat, type = "probs"))
predLong <- predDat %>% gather(Points, value, "0", "1", "2", "3")
#colour palette for fill
f <- colorRampPalette(c("darkblue", "lightblue"))
#plot
ggplot(predLong, aes(x = price, y = value, fill = Points)) +
geom_area(position = position_stack(reverse = TRUE)) +
scale_fill_manual(values = f(4)) +
geom_line(position = position_stack(reverse = TRUE)) +
facet_wrap(~province, nrow = 1) +
ylab("Probability") + xlab("Price") +
theme(strip.text = element_text(size=20)) +
theme_minimal()
predDat <- data.frame(
price = rep(seq(min(wines$price), max(wines$price), length.out = 200), length(unique(wines$province))),
province = rep(levels(wines$province), each = 200)
)
predDat <- cbind(predDat, predict(fm, predDat, type = "probs"))
predLong <- predDat %>% gather(Points, value, "0", "1", "2", "3")
#colour palette for fill
f <- colorRampPalette(c("darkblue", "lightblue"))
#plot
ggplot(predLong, aes(x = price, y = value, fill = Points)) +
geom_area(position = position_stack(reverse = TRUE)) +
scale_fill_manual(values = f(4)) +
geom_line(position = position_stack(reverse = TRUE)) +
facet_wrap(~province, nrow = 1) +
ylab("Probability") + xlab("Price") +
theme(strip.text = element_text(size=40)) +
theme_minimal()
predDat <- data.frame(
price = rep(seq(min(wines$price), max(wines$price), length.out = 200), length(unique(wines$province))),
province = rep(levels(wines$province), each = 200)
)
predDat <- cbind(predDat, predict(fm, predDat, type = "probs"))
predLong <- predDat %>% gather(Points, value, "0", "1", "2", "3")
#colour palette for fill
f <- colorRampPalette(c("darkblue", "lightblue"))
#plot
ggplot(predLong, aes(x = price, y = value, fill = Points)) +
geom_area(position = position_stack(reverse = TRUE)) +
scale_fill_manual(values = f(4)) +
geom_line(position = position_stack(reverse = TRUE)) +
facet_wrap(~province, nrow = 1) +
ylab("Probability") + xlab("Price") +
theme_minimal() +
theme(strip.text = element_text(size=40))
predDat <- data.frame(
price = rep(seq(min(wines$price), max(wines$price), length.out = 200), length(unique(wines$province))),
province = rep(levels(wines$province), each = 200)
)
predDat <- cbind(predDat, predict(fm, predDat, type = "probs"))
predLong <- predDat %>% gather(Points, value, "0", "1", "2", "3")
#colour palette for fill
f <- colorRampPalette(c("darkblue", "lightblue"))
#plot
ggplot(predLong, aes(x = price, y = value, fill = Points)) +
geom_area(position = position_stack(reverse = TRUE)) +
scale_fill_manual(values = f(4)) +
geom_line(position = position_stack(reverse = TRUE)) +
facet_wrap(~province, nrow = 1) +
ylab("Probability") + xlab("Price") +
theme_minimal() +
theme(strip.text = element_text(size=13))
predDat <- data.frame(
price = rep(seq(min(wines$price), max(wines$price), length.out = 200), length(unique(wines$province))),
province = rep(levels(wines$province), each = 200)
)
predDat <- cbind(predDat, predict(fm, predDat, type = "probs"))
predLong <- predDat %>% gather(Points, value, "0", "1", "2", "3")
#colour palette for fill
f <- colorRampPalette(c("darkblue", "lightblue"))
#plot
ggplot(predLong, aes(x = price, y = value, fill = Points)) +
geom_area(position = position_stack(reverse = TRUE)) +
scale_fill_manual(values = f(4)) +
geom_line(position = position_stack(reverse = TRUE)) +
facet_wrap(~province, nrow = 1) +
ylab("Probability") + xlab("Price") +
theme_minimal() +
theme(strip.text = element_text(size=14))
library(blogdown)
serve_site()
getwd()
setwd("D:/onedrive/github/blog_source")
serve_site()
warnings()
install_theme("hugo-theme-even")
install_theme("olOwolo/hugo-theme-even")
serve_site()
warnings()
