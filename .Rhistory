par(mfrow=c(2, 1))
dev.off()
par(mfrow=c(2, 1))
plot(s1, which =1:3, pch =1:3, xlab = ' logit ', main = ' ', width.factor = 2, cex.lab = 0.5)
plot(s2, which =1:3, pch =1:3, xlab = ' logit ', main = ' ', cex.lab = 0.5)
dev.off()
plot(s1, which =1:3, pch =1:3, xlab = ' logit ', main = ' ', width.factor = 2, cex.lab = 0.5)
plot(s2, which =1:3, pch =1:3, xlab = ' logit ', main = ' ', cex.lab = 0.5)
plot(s2, which =1:3, pch =1:3, xlab = ' logit ', main = ' ', cex.lab = 0.8)
plot(s1, which =1:3, pch =1:3, xlab = ' logit ', main = ' ', width.factor = 2, cex.lab = 0.75)
plot(s2, which =1:3, pch =1:3, xlab = ' logit ', main = ' ', cex.lab = 0.75)
plot(s2, which =1:3, pch =1:3, xlab = ' logit ', main = ' ', width.factor = 2, cex.lab = 0.75)
plot(s1, which =1:3, pch =1:3, xlab = ' logit ', main = ' ', width.factor = 2, cex.lab = 0.75)
plot(s1, which =1:3, pch =1:3, xlab = ' logit ', main = ' ', width.factor = 1.5, cex.lab = 0.75)
plot(s1, which =1:3, pch =1:3, xlab = ' logit ', main = ' ', width.factor = 1.4, cex.lab = 0.75)
plot(s2, which =1:3, pch =1:3, xlab = ' logit ', main = ' ', width.factor = 1.4, cex.lab = 0.75)
library(Hmisc)
getHdata (support)
support <- support[complete.cases(support[, c("sfdm2", "adlsc", "sex", "age", "meanbp")]), ]
sfdm <- as.integer (support$sfdm2 ) - 1
sf <- function (y) {
#cat("HIER KOMT DAS \n \n", y, "\n\n")
cat("-x-x-x-", qlogis (mean(y >= 1)), "-o-o-o-")
c(' Y ≥ 1 ' = qlogis (mean(y >= 1)),
' Y ≥ 2 ' = qlogis (mean(y >= 2)),
' Y ≥ 3 ' = qlogis (mean(y >= 3))
)
}
s <- summary(sfdm ~ adlsc + sex + age + meanbp , fun=sf ,
data =support)
plot (s, which =1:3 , pch =1:3 , xlab = ' logit ' ,
main = ' ' , width.factor =1.5) # Figure 13.1
qlogis(mean(sfdm >= 1))
qlogis(mean(sfdm >= 2))
support <- support[, c("sfdm2", "adlsc", "sex", "age", "meanbp")]
sfdm <- as.integer (support$sfdm2 ) - 1
sf <- function (y) {
#cat("HIER KOMT DAS \n \n", y, "\n\n")
cat("-x-x-x-", qlogis (mean(y >= 1)), "-o-o-o-")
c(' Y ≥ 1 ' = qlogis (mean(y >= 1)),
' Y ≥ 2 ' = qlogis (mean(y >= 2)),
' Y ≥ 3 ' = qlogis (mean(y >= 3))
)
}
s <- summary(sfdm ~ adlsc + sex + age + meanbp , fun=sf ,
data =support)
qlogis(mean(sfdm >= 1))
View(support)
lm(sfdm~adlsc)
lm(sfdm~support$adlsc)
s <- summary(sfdm ~ adlsc + sex + age + meanbp , fun=sf ,
data =support)
s
unique(sfdm)
s <- summary(sfdm ~ adlsc , fun=sf ,
data =support)
s
plot (s, which =1:3 , pch =1:3 , xlab = ' logit ' ,
main = ' ' , width.factor =1.5) # Figure 13.1
mean(support$adlsc[sfdm == 0])
mean(support$adlsc[sfdm == 1])
mean(support$adlsc[sfdm >= 1])
mean(support$adlsc[sfdm <= 1])
mean(sfdm >= 1)
aa <- qlogis(mean(sfdm >= 1)
aa <- qlogis(mean(sfdm >= 1))
aa
mean(support$adlsc[sfdm <= 1])
aa <- qlogis(mean(sfdm == 1))
>
aa <- qlogis(mean(sfdm >= 1))
mean(support$adlsc >= aa)
mean(support$adlsc > aa)
mean(support$adlsc < aa)
qlogis(mean(sfdm >= 1))
sf <- function (y) {
#cat("HIER KOMT DAS \n \n", y, "\n\n")
cat("-x-x-x-", qlogis (mean(y >= 1)), "-o-o-o-")
c(' Y ≥ 1 ' = qlogis (mean(y >= 1)),
' Y ≥ 2 ' = qlogis (mean(y >= 2)),
' Y ≥ 3 ' = qlogis (mean(y >= 3))
)
}
s <- summary(sfdm ~ adlsc , fun=sf ,
data =support)
s
s2 <- summary(sfdm ~ adlsc,
data =support)
s2
test <- support[sfdm == 0, ]
test <- support[sfdm == 1, ]
test <- support[sfdm == 0, ]
test
Hmisc::cut2(support$adlsc, g=4)
Hmisc::cut2(support$adlsc, g=3)
s
Hmisc::cut2(support$adlsc, g=4)
s
qlogis(mean(sfdm[(support$adlsc >= 0.495) & (support$adlsc <= 1.167)] >= 1))
s <- summary(sfdm ~ adlsc , fun=sf ,
data =support)
length(support$adlsc[support$adlsc==0])
length(support$adlsc[support$adlsc >= 0.495 & support$adlsc <= 1.167])
length(support$adlsc[support$adlsc >= 0 & support$adlsc <= 1.167])
length(support$adlsc[support$adlsc > 0 & support$adlsc <= 1.167])
length(support$adlsc[support$adlsc > 1.167 & support$adlsc <= 3.024])
length(support$adlsc[support$adlsc >= 1.167 & support$adlsc <= 3.024])
length(support$adlsc[support$adlsc >= 1.167])
length(support$adlsc[support$adlsc==0])
s
lm(sfdm[support$adlsc == 0] ~ support$adlsc[support$adlsc==0])
qlogis(mean(sfdm[support$adlsc == 0] >= 1))
qlogis(mean(sfdm[support$adlsc >= 0.495 & support$adlsc <= 1.167] >= 1))
qlogis(mean(sfdm[support$adlsc == 0] >= 2))
qlogis(mean(sfdm[support$adlsc == 0] >= 3))
qlogis(mean(sfdm[support$adlsc == 0] >= 4))
qlogis(mean(sfdm[support$adlsc >= 0.495 & support$adlsc <= 1.167] >= 1))
length(support$adlsc[support$adlsc >= 0.495 & support$adlsc < 1.167])
length(support$adlsc[support$adlsc >= 0.495 & support$adlsc <= 1.167])
length(support$adlsc[support$adlsc > 0.495 & support$adlsc <= 1.167])
length(support$adlsc[support$adlsc > 0 & support$adlsc <= 1.167])
length(support$adlsc[support$adlsc > 0 & support$adlsc < 1.167])
length(support$adlsc[support$adlsc > 1.167 & support$adlsc < 3.024])
length(support$adlsc[support$adlsc >= 1.167 & support$adlsc <= 3.024])
s
length(support$adlsc[support$adlsc >= 3.024 & support$adlsc <= 7])
qlogis(mean(sfdm[support$adlsc[support$adlsc >= 3.024 & support$adlsc <= 7]] >= 1))
qlogis(mean(sfdm[support$adlsc[support$adlsc >= 3.024 & support$adlsc <= 7]] >= 1))
qlogis(mean(sfdm[support$adlsc[support$adlsc >= 3.024 & support$adlsc < 7]] >= 1))
qlogis(mean(sfdm[support$adlsc[support$adlsc > 3.024 & support$adlsc < 7]] >= 1))
qlogis(mean(sfdm[support$adlsc == 0] >= 1))
qlogis(mean(sfdm[support$adlsc == 0] >= 2))
qlogis(mean(sfdm[support$adlsc == 0] >= 3))
length(support$adlsc[support$adlsc >= 0.495 & support$adlsc <= 1.167])
length(support$adlsc[support$adlsc >= 1.167 & support$adlsc <= 3.024])
length(support$adlsc[support$adlsc >= 3.024 & support$adlsc <= 7])
128+190+209
length(support$adlsc[support$adlsc==0])
527+282
length(support$adlsc[support$adlsc > 0 & support$adlsc <= 0.495])
length(support$adlsc[support$adlsc > 0 & support$adlsc <= 1.167])
length(support$adlsc[support$adlsc > 0 & support$adlsc < 1.167])
length(support$adlsc[support$adlsc >= 1.167 & support$adlsc <= 3.024])
Hmisc::cut2(support$adlsc, g=4)
test <- Hmisc::cut2(support$adlsc, g=4)
support$test <- test
View(support)
s
a <- support$adlsc[support$test == "[0.495,1.167)"]
b <- support$adlsc[support$adlsc >= 0.495 & support$adlsc <= 1.167]
setdiff(a, b)
base::setdiff(a, b)
test2 <- support
test3 <- test2[test2$test == "[0.495,1.167)"]
test3 <- test2[test2$test == "[0.495,1.167)", ]
View(test3)
test3$bin <- (test3$adlsc >= 0.495 & test3$adlsc <= 1.167)
View(test3)
0.4947999 >= 0.495
test
quantile(support$adlsc, 0.25)
quantile(support$adlsc, 0.5)
quantile(support$adlsc, 0.75)
quantile(support$adlsc, 1)
quantile(support$adlsc, probs = c(0.25, 0.5))
quantile(support$adlsc, probs = c(0.5, 0.75))
plot(Effect(focal.predictors = c("province", "price"), mod = fm), rug = FALSE, style="stacked")
points(100, 0.5, col = "red")
summary(fm)
fm <- polr(points~price+province, data = wines2)
summary(fm)
plot(Effect(focal.predictors = c("province", "price"), mod = fm), rug = FALSE, style="stacked")
View(wines2)
totest <- wines2[wines2$province == "California", ]
totest
preds <- predict(fm, seq(min(totest$price), max(totest$price), 0.1), type = "probs")
summary(fm)
fm$zeta
fm$coefficients
probtest <- 1 / (1 + exp(-(fm$zeta - fm$coefficients * wines2$price[wines2$province=="California"])))
probtest
probtest1 <- 1 / (1 + exp(-(fm$zeta - fm$coefficients * wines2$price[wines2$province=="California"])))
probtest1 <- 1 / (1 + exp(-(fm$zeta[1] - fm$coefficients * wines2$price[wines2$province=="California"])))
probtest2 <- 1 / (1 + exp(-(fm$zeta[2] - fm$coefficients * wines2$price[wines2$province=="California"])))
probtest3 <- 1 / (1 + exp(-(fm$zeta[3] - fm$coefficients * wines2$price[wines2$province=="California"])))
probtest4 <- data.frame("0" = probtest1, "1" = probtest2, "2" = probtest3)
probtest4 <- data.frame(data = c(probtest1, probtest2, probtest3),
label=rep(c("0", "1", "2"), each = length(probtest1)))
ggplot(aes(x = wines2$price[wines2$province=="California"], y = probtest4$data, fill = probtest4$label)) + geom_area()
View(probtest4)
wines2$price[wines2$province=="California"]
View(probtest4)
probtest4 <- data.frame(data = c(probtest1, probtest2, probtest3),
label=as.factor(rep(c("0", "1", "2"), each = length(probtest1))))
ggplot(aes(x = wines2$price[wines2$province=="California"], y = probtest4$data, fill = probtest4$label)) + geom_area()
probtest4 <- data.frame(data = c(probtest1, probtest2, probtest3),
label=as.factor(rep(c("0", "1", "2"), each = length(probtest1))),
xvals=rep(wines2$price[wines2$province=="California"], 3))
ggplot(data=probtest4,
aes(x = xvals,
y = data,
fill = label)) + geom_area()
View(probtest4)
max(probtest4$data)
ggplot(data=probtest4,
aes(x = xvals,
y = data,
fill = label)) + geom_area()
preds <- predict(fm, seq(min(totest$price), max(totest$price), 0.1), type = "probs")
newd <- data.frame(
price = rep(seq(min(wines2$price), max(wines2$price), length.out = 200), 1),
province = rep("California", 200)
)
newd2 <- cbind(newd, predict(fm, newd, type="probs"))
newd2
library(reshape2)
View(newd2)
#######################
library(dplyr)
newd2 <- newd2[, -"province"]
newd2 <- newd2[, -2]
newd_long <- newd2 %>% gather()
#######################
library(dplyr)
#######################
library(tidyverse)
newd_long <- newd2 %>% gather()
View(newd_long)
newd_long <- newd2 %>% gather(key = price)
View(newd_long)
colnames(newd_long)
colnames(newd_long) <- c("price", "cat", "val")
View(newd_long)
ggplot(newd_long, aes(x = price, y = val, fill = cat)) + geom_area()
plot(Effect(focal.predictors = c("price"), mod = fm), rug = FALSE, style="stacked")
ggplot(newd_long, aes(x = price, y = val, fill = cat)) + geom_area()
ggplot(newd_long, aes(x = price, y = val, fill = cat)) + geom_area() + guides(fill = guide_legend(reverse=TRUE))
ggplot(newd_long, aes(x = price, y = val, fill = cat)) + geom_area(position = position_stack(reverse = TRUE))
newd <- data.frame(
price = rep(seq(min(wines2$price), max(wines2$price), length.out = 4), 1),
province = rep("California", 200)
)
newd2 <- cbind(newd, predict(fm, newd, type="probs"))
newd2 <- newd2[, -2]
newd_long <- newd2 %>% gather(key = price)
colnames(newd_long) <- c("price", "cat", "val")
ggplot(newd_long, aes(x = price, y = val, fill = cat)) + geom_area(position = position_stack(reverse = TRUE))
newd <- data.frame(
price = rep(seq(min(wines2$price), max(wines2$price), length.out = 20), 1),
province = rep("California", 200)
)
newd2 <- cbind(newd, predict(fm, newd, type="probs"))
#######################
library(tidyverse)
newd2 <- newd2[, -2]
newd_long <- newd2 %>% gather(key = price)
colnames(newd_long) <- c("price", "cat", "val")
ggplot(newd_long, aes(x = price, y = val, fill = cat)) + geom_area(position = position_stack(reverse = TRUE))
newd <- data.frame(
price = rep(seq(min(wines2$price), max(wines2$price), length.out = 50), 1),
province = rep("California", 200)
)
#######################
library(tidyverse)
newd2 <- cbind(newd, predict(fm, newd, type="probs"))
newd2 <- newd2[, -2]
newd_long <- newd2 %>% gather(key = price)
colnames(newd_long) <- c("price", "cat", "val")
ggplot(newd_long, aes(x = price, y = val, fill = cat)) + geom_area(position = position_stack(reverse = TRUE))
newd <- data.frame(
price = rep(seq(min(wines2$price), max(wines2$price), length.out = 100), 1),
province = rep("California", 200)
)
newd2 <- cbind(newd, predict(fm, newd, type="probs"))
#######################
library(tidyverse)
newd2 <- newd2[, -2]
newd_long <- newd2 %>% gather(key = price)
colnames(newd_long) <- c("price", "cat", "val")
ggplot(newd_long, aes(x = price, y = val, fill = cat)) + geom_area(position = position_stack(reverse = TRUE))
newd <- data.frame(
price = rep(seq(min(wines2$price), max(wines2$price), length.out = 200), 1),
province = rep("California", 200)
)
newd2 <- cbind(newd, predict(fm, newd, type="probs"))
#######################
library(tidyverse)
newd2 <- newd2[, -2]
newd_long <- newd2 %>% gather(key = price)
colnames(newd_long) <- c("price", "cat", "val")
ggplot(newd_long, aes(x = price, y = val, fill = cat)) + geom_area(position = position_stack(reverse = TRUE))
ggplot(newd_long, aes(x = price, y = val, fill = cat)) + geom_area(position = position_stack(reverse = TRUE)) +
scale_fill_gradient()
ggplot(newd_long, aes(x = price, y = val, fill = cat)) + geom_area(position = position_stack(reverse = TRUE)) +
scale_fill_discrete()
colorRampPalette(c("blue", "darkblue"), 10)
colorRampPalette(10, c("blue", "darkblue"))
f  <- colorRampPalette(c("blue", "darkblue"))
f(4)
plot(rep(1,10),col=f(10),pch=19,cex=3)
f  <- colorRampPalette(c("lightblue", "darkblue"))
plot(rep(1,10),col=f(10),pch=19,cex=3)
plot(rep(1,4),col=f(4),pch=19,cex=3)
f  <- colorRampPalette(c("darkblue", "lightblue"))
f  <- colorRampPalette(c("darkblue", "lightblue"))
ggplot(newd_long, aes(x = price, y = val, fill = cat)) + geom_area(position = position_stack(reverse = TRUE)) +
scale_fill_discrete(values = f(4))
ggplot(newd_long, aes(x = price, y = val, fill = cat)) + geom_area(position = position_stack(reverse = TRUE)) +
scale_fill_manual(values = f(4))
ggplot(newd_long, aes(x = price, y = val, fill = cat)) + geom_area(position = position_stack(reverse = TRUE)) +
scale_fill_manual(values = f(4)) + theme_minimal()
ggplot(newd_long, aes(x = price, y = val, fill = cat)) + geom_area(position = position_stack(reverse = TRUE)) +
scale_fill_manual(values = f(4)) + theme_minimal() + geom_line()
ggplot(newd_long, aes(x = price, y = val, fill = cat)) + geom_area(position = position_stack(reverse = TRUE)) +
scale_fill_manual(values = f(4)) + theme_minimal() + geom_line(position = position_stack(reverse = TRUE))
Effect(focal.predictors = c("price"), mod = fm)
library(Hmisc)
##################################################################################################
##################################################################################################
##################################################################################################
##################################################################################################
##################################################################################################
library(Hmisc)
support <- support[complete.cases(support[, c("sfdm2", "adlsc", "sex", "age", "meanbp")]), ]
support <- support[, c("sfdm2", "adlsc", "sex", "age", "meanbp")]
getHdata (support)
sfdm <- as.integer (support$sfdm2 ) - 1
sf <- function (y) {
#cat("HIER KOMT DAS \n \n", y, "\n\n")
cat("-x-x-x-", qlogis (mean(y >= 1)), "-o-o-o-")
c(' Y ≥ 1 ' = qlogis (mean(y >= 1)),
' Y ≥ 2 ' = qlogis (mean(y >= 2)),
' Y ≥ 3 ' = qlogis (mean(y >= 3))
)
}
s <- summary(sfdm ~ adlsc , fun=sf ,
data =support)
s
test <- Hmisc::cut2(support$adlsc, g=4)
support$test <- test
qlogis(mean(sfdm[support$adlsc == 0] >= 1))
View(support)
View(support)
getHdata (support)
support <- support[complete.cases(support[, c("sfdm2", "adlsc", "sex", "age", "meanbp")]), ]
support <- support[, c("sfdm2", "adlsc", "sex", "age", "meanbp")]
getHdata (support)
support <- support[complete.cases(support[, c("sfdm2", "adlsc", "sex", "age", "meanbp")]), ]
support <- support[, c("sfdm2", "adlsc", "sex", "age", "meanbp")]
sfdm <- as.integer (support$sfdm2 ) - 1
sf <- function (y) {
#cat("HIER KOMT DAS \n \n", y, "\n\n")
cat("-x-x-x-", qlogis (mean(y >= 1)), "-o-o-o-")
c(' Y ≥ 1 ' = qlogis (mean(y >= 1)),
' Y ≥ 2 ' = qlogis (mean(y >= 2)),
' Y ≥ 3 ' = qlogis (mean(y >= 3))
)
}
s <- summary(sfdm ~ adlsc , fun=sf ,
data =support)
s
plot (s, which =1:3 , pch =1:3 , xlab = ' logit ' ,
main = ' ' , width.factor =1.5) # Figure 13.1
aa <- qlogis(mean(sfdm >= 1))
a <- support$adlsc[support$test == "[0.495,1.167)"]
b <- support$adlsc[support$adlsc >= 0.495 & support$adlsc <= 1.167]
test2 <- support
test <- Hmisc::cut2(support$adlsc, g=4)
support$test <- test
test2 <- support
test3 <- test2[test2$test == "[0.495,1.167)", ]
View(test2)
test2$sfdm2
test2$test
test <- Hmisc::cut2(support$adlsc, g=4)
support$test <- test
a <- support$adlsc[support$test == "[0.495,1.167)"]
a
a <- mean(qlogis(sfdm[support$test == "[0.495,1.167)"]))
a <- qlogis(mean(sfdm[support$test == "[0.495,1.167)"]))
mean(sfdm[support$test == "[0.495,1.167)"])
qlogis(1.486)
a <- qlogis(mean(sfdm[support$test == "[0.495,1.167)"] >= 1))
a
s
test
ttest
support
ttest <- aggregate(adlsc, by = list(test), FUN = function(x) print(x))
ttest <- aggregate(adlsc, by = list(test), FUN = function(x) print(x), data = support)
ttest <- aggregate("adlsc", by = list("test"), FUN = function(x) print(x), data = support)
ttest <- aggregate(adlsc~test, FUN = function(x) print(x), data = support)
View(ttest)
head(ttest)
ttest <- aggregate(adlsc~test, FUN = function(x) c(1,2))
ttest <- aggregate(adlsc~test, FUN = function(x) c(1,2), data = support)
head(ttest)
ttest <- aggregate(adlsc~test, FUN = function(x) cat("/asdasd/", x), data = support)
ttest <- aggregate(adlsc ~ test, FUN = function(x) c("Y≥1" = qlogis(mean(y >= 1)),
"Y≥2" = qlogis(mean(y >= 2)),
"Y≥3" = qlogis(mean(y >= 3))), data = support)
ttest <- aggregate(adlsc ~ test, FUN = function(y) c("Y≥1" = qlogis(mean(y >= 1)),
"Y≥2" = qlogis(mean(y >= 2)),
"Y≥3" = qlogis(mean(y >= 3))), data = support)
ttest
s
a
qlogis(mean(sfdm[support$test == "[0.495,1.167)"] >= 2))
s <- summary(sfdm ~ adlsc+meanbp , fun=sf ,
data =support)
s
s <- summary(sfdm ~ adlsc, fun=sf ,
data =support)
s
ttest <- aggregate(adlsc ~ test, FUN = function(y) c("Y≥1" = qlogis(mean(y >= 1)),
"Y≥2" = qlogis(mean(y >= 2)),
"Y≥3" = qlogis(mean(y >= 3))), data = support)
ttest
ttest <- aggregate(test, FUN = function(y) c("Y≥1" = qlogis(mean(y >= 1)),
"Y≥2" = qlogis(mean(y >= 2)),
"Y≥3" = qlogis(mean(y >= 3))), data = support)
ttest <- aggregate(test ~ test,  FUN = function(y) c("Y≥1" = qlogis(mean(y >= 1)),
"Y≥2" = qlogis(mean(y >= 2)),
"Y≥3" = qlogis(mean(y >= 3))), data = support)
support$sfdm <- sfdm
ttest <- aggregate(sfdm ~ test,  FUN = function(y) c("Y≥1" = qlogis(mean(y >= 1)),
"Y≥2" = qlogis(mean(y >= 2)),
"Y≥3" = qlogis(mean(y >= 3))), data = support)
ttest
plot (s, which =1:3 , pch =1:3 , xlab = ' logit ' ,
main = ' ' , width.factor =1.5) # Figure 13.1
ggplot() + geom_line(aes(y = 1))
ggplot() + geom_hline(aes(yintercept = c(1, 2)))
ggplot() + geom_hline(aes(yintercept = 1:nrow(ttest)))
ggplot() + ylim(c(-1, nrow(ttest) + 1)) + geom_hline(aes(yintercept = 1:nrow(ttest)))
ggplot() + ylim(c(0, nrow(ttest) + 1)) + geom_hline(aes(yintercept = 1:nrow(ttest)))
ttest2 <- ttest %>% gather()
ttest2
ttest2 <- ttest %>% gather(key = test)
ttest2
ttest <- aggregate(sfdm ~ test,  FUN = function(y) c("Y>=1" = qlogis(mean(y >= 1)),
"Y>=" = qlogis(mean(y >= 2)),
"Y>=3" = qlogis(mean(y >= 3))), data = support)
ttest2 <- ttest %>% gather(key = test)
ttest2
ttest
ttest <- setNames(aggregate(sfdm ~ test,  FUN = function(y) c("Y>=1" = qlogis(mean(y >= 1)),
"Y>=" = qlogis(mean(y >= 2)),
"Y>=3" = qlogis(mean(y >= 3))), data = support),
c("Interval", "Y>=1", "Y>=2", "Y>=3"))
ttest <- aggregate(sfdm ~ test,  FUN = function(y) c("Y>=1" = qlogis(mean(y >= 1)),
"Y>=" = qlogis(mean(y >= 2)),
"Y>=3" = qlogis(mean(y >= 3))), data = support)
ttest
setNames(ttest, c("A", "B", "C", "D"))
attributes(ttest)
ttest
colnames(ttest) <- c("Interval", "Y>=1", "Y>=2", "Y>=3")
attributes(ttest)
do.call(data.frame, ttest)
ttest2 <- do.call(data.frame, ttest)
colnames(ttest2) <- c("Interval", "Y>=1", "Y>=2", "Y>=3")
ttest2
ttest %>% gather()
ttest %>% gather(key="Interval")
ttest2
ttest2%>% gather(key="Interval")
ttest3 <- ttest2%>% gather(key="Interval")
colnames(ttest3) <- c("Interval", "Shape", "Value")
ggplot() + ylim(c(0, nrow(ttest) + 1)) +
geom_hline(aes(yintercept = 1:nrow(ttest))) + geom_point(data = ttest3,
aes(x = Value, y = Interval))
ggplot() + ylim(c(0, nrow(ttest) + 1)) +
geom_hline(aes(yintercept = 1:nrow(ttest))) + geom_point(data = ttest3,
aes(x = Value, y = as.numeric(Interval)))
ttest3
ttest3$Shape
as.numeric(ttest3$Shape)
as.numeric(ttest3$Interval)
ttest3$Interval
ggplot() + ylim(c(0, nrow(ttest) + 1)) +
geom_hline(aes(yintercept = 1:nrow(ttest))) + geom_point(data = ttest3,
aes(x = Value, y = rev(as.numeric(Interval))))
ggplot() + ylim(c(0, nrow(ttest) + 1)) +
geom_hline(aes(yintercept = 1:nrow(ttest))) + geom_point(data = ttest3,
aes(x = Value, y = rev(as.numeric(Interval)),
shape = as.factor(Shape)))
ggplot() + ylim(c(0, nrow(ttest) + 1)) +
geom_hline(aes(yintercept = 1:nrow(ttest))) + geom_point(data = ttest3,
aes(x = Value, y = rev(as.numeric(Interval)),
shape = as.factor(Shape)), size = 2)
ggplot() + ylim(c(0, nrow(ttest) + 1)) +
geom_hline(aes(yintercept = 1:nrow(ttest))) + geom_point(data = ttest3,
aes(x = Value, y = rev(as.numeric(Interval)),
shape = as.factor(Shape)), size = 3)
save.image("~/workspaceORDINAL.RData")
newd2
newd <- data.frame(
price = rep(seq(min(wines2$price), max(wines2$price), length.out = 200), 1),
province = rep("California", 200)
)
newd
newd2
newd
newd
newd2
newd_long
library(blogdown)
setwd("D:/Onedrive/github/blog_source")
serve_site()
serve_site()
serve_site()
