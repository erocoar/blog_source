x = rep(min(values) - 0.75, 3), y = c(13, 7, 1)),
fontface = "bold") +
xlab("Logit") +
theme(axis.ticks.y = element_blank()) +
theme(axis.text.y = element_blank())  +
theme(axis.title.y = element_blank())
library(effects)
# fit the full model
fm <- polr(points ~ price + province, data = wines)
plot(Effect(focal.predictors = c("price", "province"), mod = fm,
xlevels = list(price = seq(min(wines$price), max(wines$price),
length.out = 100))),
style="stacked")
#get predicted probabilities
predDat <- data.frame(
price = rep(seq(min(wines$price), max(wines$price), length.out = 200),
length(unique(wines$province))),
province = rep(levels(wines$province), each = 200)
)
predDat <- cbind(predDat, predict(fm, predDat, type = "probs"))
#long format for automatic fill
predLong <- predDat %>% gather(Points, value, "0", "1", "2", "3")
#colour palette for fill
f <- colorRampPalette(c("darkblue", "lightblue"))
#i use rev() here because it is more convenient than y-axis flip imo
ggplot(predLong, aes(x = price, y = value, fill = Points)) +
geom_area(position = position_stack(reverse = TRUE)) +
scale_fill_manual(values = f(4)) +
geom_line(position = position_stack(reverse = TRUE)) +
facet_wrap(~province, nrow = 1) +
ylab("Probability") + xlab("Price") +
theme_minimal() +
theme(strip.text = element_text(size=14))
ggplot() + theme_minimal()  +
xlim(c(xmin - 1.2, xmax)) +
ylim(c(-1, nrow(values)-3)) +
#provinces
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = 3:(n+2), yend = 3:(n+2)), colour = "grey") +
geom_point(data = provLong, aes(x = value,
y = rev(as.numeric(Interval)) + 2,
shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggProv$Interval),
x = rep(min(values) - 0.75, 4), y = 3:6)) +
#prices
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = (n+5):(2*n+4), yend = (n+5):(2*n+4)), colour = "grey") +
geom_point(data = priceLong, aes(x = value,
y = rev(as.numeric(Interval)) + n + 4,
shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggPrice$Interval),
x = rep(min(values) - 0.75), y = (n+5):(2*n+4))) +
#overall
geom_segment(aes(x = xmin, xend = xmax, y = 0, yend = 0), colour = "grey") +
geom_point(data = overall, aes(x = value, y = 0, shape = Shape), size = 3) +
#x-titles
geom_text(aes(label = c("Price", "Province", "Overall"),
x = rep(min(values) - 0.75, 3), y = c(13, 7, 1)),
fontface = "bold") +
xlab("Logit") +
theme(axis.ticks.y = element_blank()) +
theme(axis.text.y = element_blank())  +
theme(axis.title.y = element_blank())
ggplot() + theme_minimal()  +
xlim(c(xmin - 1.2, xmax)) +
ylim(c(-1, nrow(values)-3)) +
#provinces
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = 3:(n+2), yend = 3:(n+2)), colour = "grey") +
geom_point(data = provLong, aes(x = value,
y = rev(as.numeric(Interval)) + 2,
shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggProv$Interval),
x = rep(min(values) - 0.75, 4), y = 3:6)) +
#prices
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = (n+5):(2*n+4), yend = (n+5):(2*n+4)), colour = "grey") +
geom_point(data = priceLong, aes(x = value,
y = rev(as.numeric(Interval)) + n + 4,
shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggPrice$Interval),
x = rep(min(values) - 0.75), y = (n+5):(2*n+4))) +
#overall
geom_segment(aes(x = xmin, xend = xmax, y = 0, yend = 0), colour = "grey") +
geom_point(data = overall, aes(x = value, y = 0, shape = Shape), size = 3) +
#x-titles
geom_text(aes(label = c("Price", "Province", "Overall"),
x = rep(min(values) - 0.75, 3), y = c(13, 7, 1)),
fontface = "bold") +
geom_hline(aes(yintercept = -1.5)) +
xlab("Logit") +
theme(axis.ticks.y = element_blank()) +
theme(axis.text.y = element_blank())  +
theme(axis.title.y = element_blank())
ggplot() + theme_minimal()  +
xlim(c(xmin - 1.2, xmax)) +
ylim(c(-1, nrow(values)-3)) +
#provinces
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = 3:(n+2), yend = 3:(n+2)), colour = "grey") +
geom_point(data = provLong, aes(x = value,
y = rev(as.numeric(Interval)) + 2,
shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggProv$Interval),
x = rep(min(values) - 0.75, 4), y = 3:6)) +
#prices
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = (n+5):(2*n+4), yend = (n+5):(2*n+4)), colour = "grey") +
geom_point(data = priceLong, aes(x = value,
y = rev(as.numeric(Interval)) + n + 4,
shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggPrice$Interval),
x = rep(min(values) - 0.75), y = (n+5):(2*n+4))) +
#overall
geom_segment(aes(x = xmin, xend = xmax, y = 0, yend = 0), colour = "grey") +
geom_point(data = overall, aes(x = value, y = 0, shape = Shape), size = 3) +
#x-titles
geom_text(aes(label = c("Price", "Province", "Overall"),
x = rep(min(values) - 0.75, 3), y = c(13, 7, 1)),
fontface = "bold") +
geom_hline(yintercept = -1.5) +
xlab("Logit") +
theme(axis.ticks.y = element_blank()) +
theme(axis.text.y = element_blank())  +
theme(axis.title.y = element_blank())
ggplot() + theme_minimal()  +
xlim(c(xmin - 1.2, xmax)) +
ylim(c(-1, nrow(values)-3)) +
#provinces
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = 3:(n+2), yend = 3:(n+2)), colour = "grey") +
geom_point(data = provLong, aes(x = value,
y = rev(as.numeric(Interval)) + 2,
shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggProv$Interval),
x = rep(min(values) - 0.75, 4), y = 3:6)) +
#prices
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = (n+5):(2*n+4), yend = (n+5):(2*n+4)), colour = "grey") +
geom_point(data = priceLong, aes(x = value,
y = rev(as.numeric(Interval)) + n + 4,
shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggPrice$Interval),
x = rep(min(values) - 0.75), y = (n+5):(2*n+4))) +
#overall
geom_segment(aes(x = xmin, xend = xmax, y = 0, yend = 0), colour = "grey") +
geom_point(data = overall, aes(x = value, y = 0, shape = Shape), size = 3) +
#x-titles
geom_text(aes(label = c("Price", "Province", "Overall"),
x = rep(min(values) - 0.75, 3), y = c(13, 7, 1)),
fontface = "bold") +
geom_hline(yintercept = [-1.5]) +
ggplot() + theme_minimal()  +
xlim(c(xmin - 1.2, xmax)) +
ylim(c(-1, nrow(values)-3)) +
#provinces
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = 3:(n+2), yend = 3:(n+2)), colour = "grey") +
geom_point(data = provLong, aes(x = value,
y = rev(as.numeric(Interval)) + 2,
shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggProv$Interval),
x = rep(min(values) - 0.75, 4), y = 3:6)) +
#prices
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = (n+5):(2*n+4), yend = (n+5):(2*n+4)), colour = "grey") +
geom_point(data = priceLong, aes(x = value,
y = rev(as.numeric(Interval)) + n + 4,
shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggPrice$Interval),
x = rep(min(values) - 0.75), y = (n+5):(2*n+4))) +
#overall
geom_segment(aes(x = xmin, xend = xmax, y = 0, yend = 0), colour = "grey") +
geom_point(data = overall, aes(x = value, y = 0, shape = Shape), size = 3) +
#x-titles
geom_text(aes(label = c("Price", "Province", "Overall"),
x = rep(min(values) - 0.75, 3), y = c(13, 7, 1)),
fontface = "bold") +
geom_hline(yintercept = 2) +
xlab("Logit") +
theme(axis.ticks.y = element_blank()) +
theme(axis.text.y = element_blank())  +
theme(axis.title.y = element_blank())
ggplot() + theme_minimal()  +
xlim(c(xmin - 1.2, xmax)) +
ylim(c(-1, nrow(values)-3)) +
#provinces
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = 3:(n+2), yend = 3:(n+2)), colour = "grey") +
geom_point(data = provLong, aes(x = value,
y = rev(as.numeric(Interval)) + 2,
shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggProv$Interval),
x = rep(min(values) - 0.75, 4), y = 3:6)) +
#prices
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = (n+5):(2*n+4), yend = (n+5):(2*n+4)), colour = "grey") +
geom_point(data = priceLong, aes(x = value,
y = rev(as.numeric(Interval)) + n + 4,
shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggPrice$Interval),
x = rep(min(values) - 0.75), y = (n+5):(2*n+4))) +
#overall
geom_segment(aes(x = xmin, xend = xmax, y = 0, yend = 0), colour = "grey") +
geom_point(data = overall, aes(x = value, y = 0, shape = Shape), size = 3) +
#x-titles
geom_text(aes(label = c("Price", "Province", "Overall"),
x = rep(min(values) - 0.75, 3), y = c(13, 7, 1)),
fontface = "bold") +
geom_segment(aes(x = xmin, xend = xmax,
y = -1, yend = 10)) +
xlab("Logit") +
theme(axis.ticks.y = element_blank()) +
theme(axis.text.y = element_blank())  +
theme(axis.title.y = element_blank())
ggplot() + theme_minimal()  +
xlim(c(xmin - 1.2, xmax)) +
ylim(c(-1, nrow(values)-3)) +
#provinces
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = 3:(n+2), yend = 3:(n+2)), colour = "grey") +
geom_point(data = provLong, aes(x = value,
y = rev(as.numeric(Interval)) + 2,
shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggProv$Interval),
x = rep(min(values) - 0.75, 4), y = 3:6)) +
#prices
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = (n+5):(2*n+4), yend = (n+5):(2*n+4)), colour = "grey") +
geom_point(data = priceLong, aes(x = value,
y = rev(as.numeric(Interval)) + n + 4,
shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggPrice$Interval),
x = rep(min(values) - 0.75), y = (n+5):(2*n+4))) +
#overall
geom_segment(aes(x = xmin, xend = xmax, y = 0, yend = 0), colour = "grey") +
geom_point(data = overall, aes(x = value, y = 0, shape = Shape), size = 3) +
#x-titles
geom_text(aes(label = c("Price", "Province", "Overall"),
x = rep(min(values) - 0.75, 3), y = c(13, 7, 1)),
fontface = "bold") +
geom_segment(aes(x = c(xmin, max), xend = c(xmin, xmax),
y = c(rep(-1, 2)), yend = c(rep(10, 2)))) +
xlab("Logit") +
theme(axis.ticks.y = element_blank()) +
theme(axis.text.y = element_blank())  +
theme(axis.title.y = element_blank())
c(rep(-1, 2))
ggplot() + theme_minimal()  +
xlim(c(xmin - 1.2, xmax)) +
ylim(c(-1, nrow(values)-3)) +
#provinces
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = 3:(n+2), yend = 3:(n+2)), colour = "grey") +
geom_point(data = provLong, aes(x = value,
y = rev(as.numeric(Interval)) + 2,
shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggProv$Interval),
x = rep(min(values) - 0.75, 4), y = 3:6)) +
#prices
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = (n+5):(2*n+4), yend = (n+5):(2*n+4)), colour = "grey") +
geom_point(data = priceLong, aes(x = value,
y = rev(as.numeric(Interval)) + n + 4,
shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggPrice$Interval),
x = rep(min(values) - 0.75), y = (n+5):(2*n+4))) +
#overall
geom_segment(aes(x = xmin, xend = xmax, y = 0, yend = 0), colour = "grey") +
geom_point(data = overall, aes(x = value, y = 0, shape = Shape), size = 3) +
#x-titles
geom_text(aes(label = c("Price", "Province", "Overall"),
x = rep(min(values) - 0.75, 3), y = c(13, 7, 1)),
fontface = "bold") +
geom_segment(aes(x = c(xmin, max), xend = c(xmin, xmax),
y = c(rep(-1, 2)), yend = c(rep(10, 2))))
ggplot() + theme_minimal()  +
xlim(c(xmin - 1.2, xmax)) +
ylim(c(-1, nrow(values)-3)) +
#provinces
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = 3:(n+2), yend = 3:(n+2)), colour = "grey") +
geom_point(data = provLong, aes(x = value,
y = rev(as.numeric(Interval)) + 2,
shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggProv$Interval),
x = rep(min(values) - 0.75, 4), y = 3:6)) +
#prices
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = (n+5):(2*n+4), yend = (n+5):(2*n+4)), colour = "grey") +
geom_point(data = priceLong, aes(x = value,
y = rev(as.numeric(Interval)) + n + 4,
shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggPrice$Interval),
x = rep(min(values) - 0.75), y = (n+5):(2*n+4))) +
#overall
geom_segment(aes(x = xmin, xend = xmax, y = 0, yend = 0), colour = "grey") +
geom_point(data = overall, aes(x = value, y = 0, shape = Shape), size = 3) +
#x-titles
geom_text(aes(label = c("Price", "Province", "Overall"),
x = rep(min(values) - 0.75, 3), y = c(13, 7, 1)),
fontface = "bold") +
geom_segment(aes(x = c(xmin, xmax), xend = c(xmin, xmax),
y = c(rep(-1, 2)), yend = c(rep(10, 2)))) +
xlab("Logit") +
theme(axis.ticks.y = element_blank()) +
theme(axis.text.y = element_blank())  +
theme(axis.title.y = element_blank())
ggplot() + theme_minimal()  +
xlim(c(xmin - 1.2, xmax+0.2)) +
ylim(c(-1, nrow(values)-3)) +
#provinces
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = 3:(n+2), yend = 3:(n+2)), colour = "grey") +
geom_point(data = provLong, aes(x = value,
y = rev(as.numeric(Interval)) + 2,
shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggProv$Interval),
x = rep(min(values) - 0.75, 4), y = 3:6)) +
#prices
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = (n+5):(2*n+4), yend = (n+5):(2*n+4)), colour = "grey") +
geom_point(data = priceLong, aes(x = value,
y = rev(as.numeric(Interval)) + n + 4,
shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggPrice$Interval),
x = rep(min(values) - 0.75), y = (n+5):(2*n+4))) +
#overall
geom_segment(aes(x = xmin, xend = xmax, y = 0, yend = 0), colour = "grey") +
geom_point(data = overall, aes(x = value, y = 0, shape = Shape), size = 3) +
#x-titles
geom_text(aes(label = c("Price", "Province", "Overall"),
x = rep(min(values) - 0.75, 3), y = c(13, 7, 1)),
fontface = "bold") +
geom_segment(aes(x = c(xmin - 0.2, xmax + 0.2), xend = c(xmin - 0.2, xmax + 0.2),
y = c(rep(-1, 2)), yend = c(rep(10, 2)))) +
xlab("Logit") +
theme(axis.ticks.y = element_blank()) +
theme(axis.text.y = element_blank())  +
theme(axis.title.y = element_blank())
nrow(values)-3)
nrow(values)-3
ggplot() + theme_minimal()  +
xlim(c(xmin - 1.2, xmax+0.2)) +
ylim(c(-1, nrow(values)-3)) +
#provinces
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = 3:(n+2), yend = 3:(n+2)), colour = "grey") +
geom_point(data = provLong, aes(x = value,
y = rev(as.numeric(Interval)) + 2,
shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggProv$Interval),
x = rep(min(values) - 0.75, 4), y = 3:6)) +
#prices
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = (n+5):(2*n+4), yend = (n+5):(2*n+4)), colour = "grey") +
geom_point(data = priceLong, aes(x = value,
y = rev(as.numeric(Interval)) + n + 4,
shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggPrice$Interval),
x = rep(min(values) - 0.75), y = (n+5):(2*n+4))) +
#overall
geom_segment(aes(x = xmin, xend = xmax, y = 0, yend = 0), colour = "grey") +
geom_point(data = overall, aes(x = value, y = 0, shape = Shape), size = 3) +
#x-titles
geom_text(aes(label = c("Price", "Province", "Overall"),
x = rep(min(values) - 0.75, 3), y = c(13, 7, 1)),
fontface = "bold") +
geom_segment(aes(x = c(xmin - 0.2, xmax + 0.2), xend = c(xmin - 0.2, xmax + 0.2),
y = c(rep(-1, 2)), yend = c(rep(13, 2)))) +
xlab("Logit") +
theme(axis.ticks.y = element_blank()) +
theme(axis.text.y = element_blank())  +
theme(axis.title.y = element_blank())
ggplot() + theme_minimal()  +
xlim(c(xmin - 1.2, xmax+0.2)) +
ylim(c(-1, nrow(values)-3)) +
#provinces
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = 3:(n+2), yend = 3:(n+2)), colour = "grey") +
geom_point(data = provLong, aes(x = value,
y = rev(as.numeric(Interval)) + 2,
shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggProv$Interval),
x = rep(min(values) - 0.75, 4), y = 3:6)) +
#prices
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = (n+5):(2*n+4), yend = (n+5):(2*n+4)), colour = "grey") +
geom_point(data = priceLong, aes(x = value,
y = rev(as.numeric(Interval)) + n + 4,
shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggPrice$Interval),
x = rep(min(values) - 0.75), y = (n+5):(2*n+4))) +
#overall
geom_segment(aes(x = xmin, xend = xmax, y = 0, yend = 0), colour = "grey") +
geom_point(data = overall, aes(x = value, y = 0, shape = Shape), size = 3) +
#x-titles
geom_text(aes(label = c("Price", "Province", "Overall"),
x = rep(min(values) - 0.75, 3), y = c(13, 7, 1)),
fontface = "bold") +
geom_segment(aes(x = rep(c(xmin - 0.2, xmax + 0.2), 2),
xend = c(xmin - 0.2, xmax + 0.2, xmax + 0.2, xmin - 0.2),
y = c(rep(-1, 2), -1, 13), yend = c(rep(13, 2), -1, 13))) +
xlab("Logit") +
theme(axis.ticks.y = element_blank()) +
theme(axis.text.y = element_blank())  +
theme(axis.title.y = element_blank())
ggplot() + theme_minimal()  +
xlim(c(xmin - 1.2, xmax+0.2)) +
ylim(c(-1, nrow(values)-3)) +
#provinces
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = 3:(n+2), yend = 3:(n+2)), colour = "grey") +
geom_point(data = provLong, aes(x = value,
y = rev(as.numeric(Interval)) + 2,
shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggProv$Interval),
x = rep(min(values) - 0.75, 4), y = 3:6)) +
#prices
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = (n+5):(2*n+4), yend = (n+5):(2*n+4)), colour = "grey") +
geom_point(data = priceLong, aes(x = value,
y = rev(as.numeric(Interval)) + n + 4,
shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggPrice$Interval),
x = rep(min(values) - 0.75), y = (n+5):(2*n+4))) +
#overall
geom_segment(aes(x = xmin, xend = xmax, y = 0, yend = 0), colour = "grey") +
geom_point(data = overall, aes(x = value, y = 0, shape = Shape), size = 3) +
#x-titles
geom_text(aes(label = c("Price", "Province", "Overall"),
x = rep(min(values) - 0.75, 3), y = c(13, 7, 1)),
fontface = "bold") +
#border
geom_segment(aes(x = rep(c(xmin - 0.2, xmax + 0.2), 2),
xend = c(xmin - 0.2, xmax + 0.2, xmax + 0.2, xmin - 0.2),
y = c(rep(-1, 2), -1, 13), yend = c(rep(13, 2), -1, 13))) +
xlab("Logit") +
theme(axis.ticks.y = element_blank()) +
theme(axis.text.y = element_blank())  +
theme(axis.title.y = element_blank()) +
labs(caption = "PO is checked by examining vertical constancy of distances between the two symbols (Harrell, 2001).")
ggplot() + theme_minimal()  +
xlim(c(xmin - 1.2, xmax+0.2)) +
ylim(c(-1, nrow(values)-3)) +
#provinces
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = 3:(n+2), yend = 3:(n+2)), colour = "grey") +
geom_point(data = provLong, aes(x = value,
y = rev(as.numeric(Interval)) + 2,
shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggProv$Interval),
x = rep(min(values) - 0.75, 4), y = 3:6)) +
#prices
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = (n+5):(2*n+4), yend = (n+5):(2*n+4)), colour = "grey") +
geom_point(data = priceLong, aes(x = value,
y = rev(as.numeric(Interval)) + n + 4,
shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggPrice$Interval),
x = rep(min(values) - 0.75), y = (n+5):(2*n+4))) +
#overall
geom_segment(aes(x = xmin, xend = xmax, y = 0, yend = 0), colour = "grey") +
geom_point(data = overall, aes(x = value, y = 0, shape = Shape), size = 3) +
#x-titles
geom_text(aes(label = c("Price", "Province", "Overall"),
x = rep(min(values) - 0.75, 3), y = c(13, 7, 1)),
fontface = "bold") +
#border
geom_segment(aes(x = rep(c(xmin - 0.2, xmax + 0.2), 2),
xend = c(xmin - 0.2, xmax + 0.2, xmax + 0.2, xmin - 0.2),
y = c(rep(-1, 2), -1, 13), yend = c(rep(13, 2), -1, 13))) +
xlab("Logit") +
theme(axis.ticks.y = element_blank()) +
theme(axis.text.y = element_blank())  +
theme(axis.title.y = element_blank()) +
labs(caption = "PO is checked by examining\nvertical constancy of distances between the two symbols (Harrell, 2001).")
ggplot() + theme_minimal()  +
xlim(c(xmin - 1.2, xmax+0.2)) +
ylim(c(-1, nrow(values)-3)) +
#provinces
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = 3:(n+2), yend = 3:(n+2)), colour = "grey") +
geom_point(data = provLong, aes(x = value,
y = rev(as.numeric(Interval)) + 2,
shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggProv$Interval),
x = rep(min(values) - 0.75, 4), y = 3:6)) +
#prices
geom_segment(aes(x = rep(xmin, n), xend = rep(xmax, n),
y = (n+5):(2*n+4), yend = (n+5):(2*n+4)), colour = "grey") +
geom_point(data = priceLong, aes(x = value,
y = rev(as.numeric(Interval)) + n + 4,
shape = Shape), size = 3) +
geom_text(aes(label = rev(strataggPrice$Interval),
x = rep(min(values) - 0.75), y = (n+5):(2*n+4))) +
#overall
geom_segment(aes(x = xmin, xend = xmax, y = 0, yend = 0), colour = "grey") +
geom_point(data = overall, aes(x = value, y = 0, shape = Shape), size = 3) +
#x-titles
geom_text(aes(label = c("Price", "Province", "Overall"),
x = rep(min(values) - 0.75, 3), y = c(13, 7, 1)),
fontface = "bold") +
#border
geom_segment(aes(x = rep(c(xmin - 0.2, xmax + 0.2), 2),
xend = c(xmin - 0.2, xmax + 0.2, xmax + 0.2, xmin - 0.2),
y = c(rep(-1, 2), -1, 13), yend = c(rep(13, 2), -1, 13))) +
xlab("Logit") +
theme(axis.ticks.y = element_blank()) +
theme(axis.text.y = element_blank())  +
theme(axis.title.y = element_blank()) +
labs(caption = "PO is checked by examining\nvertical constancy of distances\nbetween the two symbols (Harrell, 2001).")
